{"version":3,"sources":["axios/index.ts","axios/secret.ts","store/axios/reducer.ts","store/actionTypes.ts","store/breeds/reducer.ts","store/categories/reducer.ts","store/setting/reducer.ts","store/reducers.ts","store/store.ts","serviceWorker.ts","store/axios/actions.ts","services/images.ts","services/votes.ts","services/faviourites.ts","pages/Home/styles.ts","components/TransitionUp/TransitionUp.tsx","components/Header/styles.tsx","components/Header/Header.tsx","components/Analysis/Analysis.tsx","pages/Home/Home.tsx","pages/Setting/styles.ts","pages/Setting/Setting.tsx","store/setting/actions.ts","pages/Votes/Votes.tsx","pages/Favourites/Favourties.tsx","services/breeds.ts","services/categories.ts","App.tsx","store/breeds/actions.ts","store/categories/actions.ts","index.tsx"],"names":["catAxios","axios","create","baseURL","headers","x-api-key","dogAxios","mapper","CAT","DOG","reducer","state","arguments","length","undefined","action","type","payload","initState","Object","objectSpread","combineReducers","breeds","categories","setting","store","createStore","reducers","Boolean","window","location","hostname","match","updateAxios","getState","subscribe","services_images","getImages","params","get","then","response","data","getImageById","imageId","concat","getUploadedImages","uploadImage","post","Content-Type","catch","error","deleteImage","delete","analyzeImage","services_votes","getVotes","getVoteById","voteId","addVote","deleteVote","faviourites","getFavourites","getFavouriteById","favouriteId","addFavourite","deleteFavourite","Wrapper","styled","div","_templateObject","ImageWrapper","_templateObject2","Image","img","_templateObject3","ActionDiv","_templateObject4","VoteButton","IconButton","_templateObject5","UploadButton","_templateObject6","FavouriteButton","_templateObject7","AnalyzeButton","_templateObject8","NextButton","_templateObject9","TransitionUp","props","react","index_es","assign","direction","header","styles_templateObject","UserButton","styles_templateObject2","UserName","Typography","styles_templateObject3","SettingButton","styles_templateObject4","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleUser","event","setState","userEl","currentTarget","isOpenUser","toggleSetting","settingEl","isOpenSetting","_this2","_this$state","history","styles_Wrapper","onClick","Icon_default","a","react_router_dom","to","Button_default","Popper_default","open","anchorEl","transition","disablePortal","_ref","TransitionProps","placement","Grow_default","style","transformOrigin","Paper_default","ClickAwayListener_default","onClickAway","MenuList_default","MenuItem_default","push","_ref2","Fade_default","timeout","React","withRouter","Analysis","formatDate","dateStr","date","Date","getMonth","getDate","getFullYear","drawPie","pieEl","document","querySelector","echarts","init","setOption","title","text","tooltip","legend","xAxis","yAxis","series","name","imageAnalysis","id","vendor","created_at","Home","vote","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","votesService","sub_id","image_id","images","value","isOpenMsg","msg","stop","onChangeImage","_callee2","imageInput","_context2","current","files","abrupt","FormData","append","imagesService","sent","status","toString","startsWith","message","onCloseMsg","_callee3","_context3","updateImage","_callee4","_context4","toggleAnalysisCollapse","_callee5","wrapper","_context5","isOpenAnalysis","analyze","scroll","favourite","_callee6","_context6","favouritesService","_callee7","_context7","key","components_Header_Header","src","url","alt","color","fontSize","onChange","accept","display","ref","htmlFor","component","components_Analysis_Analysis","TransitionComponent","onClose","connect","Setting_styles_templateObject","TypeSettingSection","section","Setting_styles_templateObject2","Setting","onChangeType","selectedType","target","updateSettingType","Setting_styles_Wrapper","FormControl_default","fullWidth","RadioGroup_default","FormControlLabel_default","control","Radio_default","label","mapDispatchToProps","Votes","deletingVoteId","newImagesWithVote","imagesWithVote","filter","image","closeDialog","isOpenDialog","openDialog","deletingVote","votes","i","imageWithVote","console","log","GridList_default","cellHeight","GridListTile_default","cols","height","ListSubheader_default","map","GridListTileBar_default","subtitle","actionIcon","IconButton_default","Dialog_default","DialogTitle_default","DialogActions_default","Favourites","deletingFavouriteId","newImagesWithFavourite","imagesWithFavourite","deletingFavourite","favourites","imageWithFavourite","services_breeds","services_categories","App","categoriesService","initCategories","breedsService","initBreeds","react_default","createElement","Card_default","className","react_router","path","exact","Component","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.267bd8e8.chunk.js","sourcesContent":["import axios, {AxiosInstance} from 'axios';\r\nimport { catKey, dogKey } from \"./secret\"\r\n\r\nconst catAxios: AxiosInstance = axios.create({\r\n  baseURL: 'https://api.thecatapi.com/v1',\r\n  headers: {\r\n    'x-api-key': catKey\r\n  }\r\n});\r\nconst dogAxios: AxiosInstance = axios.create({\r\n  baseURL: 'https://api.thedogapi.com/v1',\r\n  headers: {\r\n    'x-api-key': dogKey\r\n  }\r\n});\r\n\r\nexport {\r\n  catAxios,\r\n  dogAxios\r\n}\r\n","export const catKey = '416848bd-ea2f-4d38-a329-0e858ab5cd38'\r\nexport const dogKey = '89e98203-1b5b-4c32-a67b-e314bf19f4c5'\r\n","import {UPDATE_AXIOS} from \"../actionTypes\";\r\nimport {AxiosInstance} from \"axios\"\r\nimport {catAxios, dogAxios} from \"../../axios\"\r\nimport {IAxiosAction, IAxiosMapper} from \"./index\"\r\n\r\nconst mapper: IAxiosMapper = {\r\n  CAT: catAxios,\r\n  DOG: dogAxios\r\n}\r\n\r\nconst reducer = (state: AxiosInstance=catAxios, action: IAxiosAction) => {\r\n  switch (action.type) {\r\n    case UPDATE_AXIOS:\r\n      return mapper[action.payload]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","export const UPDATE_AXIOS: string = 'UPDATE_AXIOS'\r\nexport const INIT_BREEDS: string = 'INIT_BREEDS'\r\nexport const INIT_CATEGORIES: string = 'INIT_CATEGORIES'\r\n\r\nexport const INIT_SETTING_BREEDS: string = 'INIT_SETTING_BREEDS'\r\nexport const INIT_SETTING_CATEGORIES: string = 'INIT_SETTING_CATEGORIES'\r\nexport const UPDATE_SETTING_TYPE: string = 'UPDATE_SETTING_TYPE'\r\nexport const UPDATE_SETTING_BREEDS: string = 'UPDATE_SETTING_BREEDS'\r\nexport const UPDATE_SETTING_CATEGORIES: string = 'UPDATE_SETTING_CATEGORIES'\r\n","import {INIT_BREEDS} from \"../actionTypes\";\r\nimport {IBreed} from \"../../env\"\r\nimport {IBreedsAction} from \"./index\"\r\n\r\nconst reducer = (state: Array<IBreed>=[], action: IBreedsAction) => {\r\n  switch (action.type) {\r\n    case INIT_BREEDS:\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import {INIT_CATEGORIES} from \"../actionTypes\";\r\nimport {ICategory} from \"../../env\"\r\nimport {ICategoriesAction} from \"./index\"\r\n\r\nconst reducer = (state: Array<ICategory>=[], action: ICategoriesAction) => {\r\n  switch (action.type) {\r\n    case INIT_CATEGORIES:\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import {UPDATE_SETTING_TYPE} from \"../actionTypes\";\r\nimport {ISettingStore, IUpdateSettingTypeAction, SettingAction} from \"./index\"\r\n\r\nlet initState: ISettingStore = {\r\n  type: 'CAT',\r\n}\r\n\r\nconst reducer = (state = initState, action: SettingAction) => {\r\n  switch (action.type) {\r\n    case UPDATE_SETTING_TYPE:\r\n      return {...state, type: (<IUpdateSettingTypeAction>action).payload}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import axios from './axios/reducer'\r\nimport breeds from './breeds/reducer'\r\nimport categories from './categories/reducer'\r\nimport setting from './setting/reducer'\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default combineReducers({\r\n  axios,\r\n  breeds,\r\n  categories,\r\n  setting\r\n})\r\n","import { createStore } from \"redux\";\r\nimport reducers from './reducers'\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {UPDATE_AXIOS} from \"../actionTypes\"\r\nimport {IAxiosAction} from \"./index\"\r\n\r\nexport const updateAxios = (payload: 'CAT'|'DOG'): IAxiosAction => {\r\n  return {\r\n    type: UPDATE_AXIOS,\r\n    payload\r\n  }\r\n}\r\n","import store from \"../store/store\"\r\nimport {IGetImagesParams, IGetUploadedImagesParams} from \"./index\"\r\nimport {AxiosError, AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getImages: (params?: IGetImagesParams) => {\r\n    return axios\r\n      .get(`/images/search`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getImageById: (imageId: string) => {\r\n    return axios\r\n      .get(`/images/${imageId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getUploadedImages: (params: IGetUploadedImagesParams) => {\r\n    return axios\r\n      .get(`/images`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  uploadImage: (data: FormData) => {\r\n    return axios\r\n      .post(`/images/upload`, data, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      })\r\n      .then((response: AxiosResponse) => response)\r\n      .catch((error: AxiosError) => error.response)\r\n  },\r\n  deleteImage: (imageId: string) => {\r\n    return axios\r\n      .delete(`/images/${imageId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  analyzeImage: (imageId: string) => {\r\n    return axios\r\n      .get(`/images/${imageId}/analysis`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import store from \"../store/store\"\r\nimport {\r\n  IAddVoteData,\r\n  IGetVotesParams,\r\n} from \"./index\"\r\nimport {AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getVotes: (params: IGetVotesParams) => {\r\n    return axios\r\n      .get(`/votes`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getVoteById: (voteId: string) => {\r\n    return axios\r\n      .get(`/votes/${voteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  addVote: (data: IAddVoteData) => {\r\n    return axios\r\n      .post(`/votes`, data)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  deleteVote: (voteId: string) => {\r\n    return axios\r\n      .delete(`/votes/${voteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import store from \"../store/store\"\r\nimport {\r\n  IAddFavouriteData,\r\n  IGetFavouritesParams\r\n} from \"./index\"\r\nimport {AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getFavourites: (params: IGetFavouritesParams) => {\r\n    return axios\r\n      .get(`/favourites`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getFavouriteById: (favouriteId: string) => {\r\n    return axios\r\n      .get(`/favourites/${favouriteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  addFavourite: (data: IAddFavouriteData) => {\r\n    return axios\r\n      .post(`/favourites`, data)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  deleteFavourite: (favouriteId: string) => {\r\n    return axios\r\n      .delete(`/favourites/${favouriteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n`\r\n\r\nexport const ImageWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 510px;\r\n  overflow: hidden;\r\n  border-radius: 12px;\r\n`\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  vertical-align: top;\r\n  border-radius: 8px;\r\n`\r\nexport const ActionDiv = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  border-top: 1px solid #ddd;\r\n`\r\nexport const VoteButton = styled(IconButton)`\r\n`\r\nexport const UploadButton = styled(IconButton)`\r\n  color: #61dafb !important;\r\n`\r\nexport const FavouriteButton = styled(IconButton)` \r\n  color: #fadb14 !important;\r\n`\r\nexport const AnalyzeButton = styled(IconButton)`\r\n  color: #20232a !important;\r\n`\r\nexport const NextButton = styled(IconButton)` \r\n`\r\n","import * as React from 'react'\r\nimport {Slide} from \"@material-ui/core\"\r\n\r\nconst TransitionUp: React.FunctionComponent = (props) => {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nexport default TransitionUp\r\n","import styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nexport const Wrapper = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n  color: #20232a;\r\n  font-size: 1.2em;\r\n  a {\r\n    color: inherit;\r\n  }\r\n`\r\nexport const UserButton = styled(IconButton)`\r\n\r\n`\r\nexport const UserName = styled(Typography)`\r\n  padding: 8px;\r\n`\r\nexport const SettingButton = styled(IconButton)`\r\n`\r\n","import * as React from 'react'\r\n// Router\r\nimport {withRouter} from \"react-router-dom\"\r\n// Material UI\r\nimport Icon from '@material-ui/core/Icon'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Grow from \"@material-ui/core/Grow\"\r\nimport Popper from \"@material-ui/core/Popper\"\r\nimport Fade from \"@material-ui/core/Fade\"\r\nimport MenuList from '@material-ui/core/MenuList'\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n// Styles\r\nimport {Wrapper, UserButton, UserName, SettingButton} from \"./styles\"\r\n// Types\r\nimport {IHeaderProps, IHeaderState} from \"./index\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass Header extends React.Component<IHeaderProps, IHeaderState> {\r\n  constructor(props: IHeaderProps) {\r\n    super(props)\r\n    this.state = {\r\n      isOpenUser: false,\r\n      userEl: null,\r\n      isOpenSetting: false,\r\n      settingEl: null\r\n    }\r\n  }\r\n\r\n  private toggleUser = (event: any) => {\r\n    this.setState({\r\n      userEl: event.currentTarget,\r\n      isOpenUser: !this.state.isOpenUser,\r\n    });\r\n  }\r\n\r\n  private toggleSetting = (event: any) => {\r\n    this.setState({\r\n      settingEl: event.currentTarget,\r\n      isOpenSetting: !this.state.isOpenSetting,\r\n    })\r\n  }\r\n\r\n  public render() {\r\n    const {isOpenUser, userEl, isOpenSetting, settingEl} = this.state\r\n    const {history} = this.props\r\n    return (\r\n      <Wrapper>\r\n        <UserButton onClick={this.toggleUser}> <Icon>person</Icon> </UserButton>\r\n        <Link to=\"/\"><Button>🐱A🐶</Button></Link>\r\n        <SettingButton onClick={this.toggleSetting}><Icon>settings</Icon></SettingButton>\r\n\r\n        <Popper open={isOpenSetting} anchorEl={settingEl} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow {...TransitionProps} style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}>\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={this.toggleSetting}>\r\n                  <MenuList>\r\n                    <MenuItem onClick={() => history.push('/setting')}>General Setting</MenuItem>\r\n                    <MenuItem onClick={() => history.push('/votes')}>Voted Images</MenuItem>\r\n                    <MenuItem onClick={() => history.push('/favourites')}>Favourite Images</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n\r\n        <Popper placement=\"bottom-start\" open={isOpenUser} anchorEl={userEl} transition>\r\n          {({ TransitionProps }) => (\r\n            <Fade {...TransitionProps} timeout={350}>\r\n              <Paper>\r\n                <UserName>hai_test</UserName>\r\n              </Paper>\r\n            </Fade>\r\n          )}\r\n        </Popper>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import * as React from 'react'\n// ECharts\nimport echarts from 'echarts'\n// Types\nimport {IAnalysisProps, IAnalysisState} from \"./index\"\n\nclass Analysis extends React.Component<IAnalysisProps, IAnalysisState> {\n  constructor(props: IAnalysisProps) {\n    super(props)\n  }\n\n  private formatDate = (dateStr: string): string => {\n    const date = new Date(dateStr)\n    return `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()-2000}`\n  }\n\n  private drawPie = () => {\n    const pieEl: HTMLDivElement|null = document.querySelector('image-analysis-pie')\n    if (!pieEl) {\n      return\n    }\n    const myChart = echarts.init(pieEl);\n\n    const option = {\n      title: {\n        text: 'ECharts 入门示例'\n      },\n      tooltip: {},\n      legend: {\n        data:['销量']\n      },\n      xAxis: {\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\n      },\n      yAxis: {},\n      series: [{\n        name: '销量',\n        type: 'bar',\n        data: [5, 20, 36, 10, 10, 20]\n      }]\n    };\n\n    // 使用刚指定的配置项和数据显示图表。\n    myChart.setOption(option);\n  }\n\n  public render() {\n    const {imageAnalysis} = this.props\n    return (\n      <div>\n        {/*{*/}\n          {/*imageAnalysis.labels && imageAnalysis.labels.map(label =>*/}\n            {/*<p>Name: {label.Name}, Confidence: {label.Confidence}</p>*/}\n          {/*)*/}\n        {/*}*/}\n        <div id=\"image-analysis-pie\"/>\n        <p><strong>Vendor: </strong>{imageAnalysis.vendor}</p>\n        <p><strong>Created At</strong>{this.formatDate(imageAnalysis.created_at)}</p>\n      </div>\n    )\n  }\n}\n\nexport default Analysis\n","import * as React from 'react'\r\n// Material\r\nimport Icon from '@material-ui/core/Icon'\r\n// Redux\r\nimport {IStore} from \"../../store\"\r\nimport {connect} from \"react-redux\"\r\n// Material UI\r\nimport {Snackbar} from \"@material-ui/core\"\r\n// Services\r\nimport imagesService from '../../services/images'\r\nimport votesService from '../../services/votes'\r\nimport favouritesService from '../../services/faviourites'\r\n// Types\r\nimport {IHomeActionProps, IHomeProps, IHomeState} from \"./index\"\r\n// Styles\r\nimport {\r\n  ActionDiv,\r\n  AnalyzeButton,\r\n  FavouriteButton,\r\n  Image,\r\n  ImageWrapper,\r\n  NextButton,\r\n  UploadButton,\r\n  VoteButton,\r\n  Wrapper\r\n} from \"./styles\"\r\n// Types\r\nimport {IImage} from \"../../env\"\r\nimport {AxiosResponse} from \"axios\"\r\n// Custom components\r\nimport TransitionUp from \"../../components/TransitionUp/TransitionUp\"\r\nimport Header from '../../components/Header/Header'\r\nimport Analysis from \"../../components/Analysis/Analysis\"\r\n\r\nclass Home extends React.Component<IHomeProps, IHomeState> {\r\n  constructor(props: IHomeProps) {\r\n    super(props);\r\n    this.state = {\r\n      images: [],\r\n      imageInput: React.createRef(),\r\n      isOpenMsg: false,\r\n      msg: '',\r\n      isOpenAnalysis: false,\r\n      imageAnalysis: []\r\n    }\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    await this.updateImage()\r\n  }\r\n\r\n  private vote = async () => {\r\n    await votesService.addVote({\r\n      sub_id: 'hai_test',\r\n      image_id: this.state.images[0].id,\r\n      value: 1\r\n    })\r\n    this.setState({isOpenMsg: true, msg: 'Vote it'})\r\n  }\r\n\r\n  private onChangeImage = async () => {\r\n    const {imageInput} = this.state\r\n    if (!imageInput.current || !imageInput.current.files || imageInput.current.files.length === 0) {\r\n      return\r\n    }\r\n\r\n    const data = new FormData();\r\n    data.append('sub_id', 'hai_test');\r\n    data.append('file', imageInput.current.files[0]);\r\n    const response: AxiosResponse = await imagesService.uploadImage(data)\r\n    // Error\r\n    if (response.status.toString().startsWith('2')) {\r\n      this.setState({isOpenMsg: true, msg: 'Upload successfully'})\r\n    } else {\r\n      this.setState({isOpenMsg: true, msg: response.data.message})\r\n    }\r\n  }\r\n\r\n  private onCloseMsg = async () => {\r\n    this.setState({isOpenMsg: false})\r\n  }\r\n\r\n  private updateImage = async () => {\r\n    const images: Array<IImage> = await imagesService.getImages()\r\n    this.setState({images})\r\n  }\r\n\r\n  private toggleAnalysisCollapse = async () => {\r\n    await this.setState({isOpenAnalysis: !this.state.isOpenAnalysis})\r\n    if (this.state.isOpenAnalysis) {\r\n      await this.analyze()\r\n      const wrapper = document.querySelector('#app-wrapper')\r\n      wrapper && wrapper.scroll(0, 9999)\r\n    }\r\n  }\r\n\r\n  private favourite = async () => {\r\n    await favouritesService.addFavourite({\r\n      sub_id: 'hai_test',\r\n      image_id: this.state.images[0].id\r\n    })\r\n    this.setState({isOpenMsg: true, msg: 'Add to favourite'})\r\n  }\r\n\r\n  private analyze = async () => {\r\n    const {images} = this.state\r\n    if (images.length === 0) {\r\n      return\r\n    }\r\n    const imageAnalysis = await imagesService.analyzeImage(this.state.images[0].id)\r\n    this.setState({imageAnalysis})\r\n  }\r\n\r\n  public render() {\r\n    const {images, imageInput, isOpenMsg, msg, isOpenAnalysis, imageAnalysis} = this.state\r\n    return (\r\n      <Wrapper id=\"home-wrapper\">\r\n        {\r\n          images.length > 0 &&\r\n          <div key={images[0].id}>\r\n              <Header/>\r\n              <ImageWrapper>\r\n                  <Image src={images[0].url} alt=\"Animal Image\"/>\r\n              </ImageWrapper>\r\n              <ActionDiv>\r\n                  <VoteButton color=\"primary\" onClick={this.vote}> <Icon fontSize=\"large\">thumb_up</Icon> </VoteButton>\r\n                  <input onChange={this.onChangeImage} accept=\"image/*\" style={{display: 'none'}} id=\"new-file\"\r\n                         type=\"file\" ref={imageInput}/>\r\n                  <label htmlFor=\"new-file\">\r\n                      <UploadButton component=\"span\"><Icon>cloud_upload</Icon></UploadButton>\r\n                  </label>\r\n                  <FavouriteButton onClick={this.favourite}> <Icon fontSize=\"large\">star</Icon> </FavouriteButton>\r\n                  <AnalyzeButton onClick={this.toggleAnalysisCollapse}><Icon>show_chart</Icon></AnalyzeButton>\r\n                  <NextButton color=\"secondary\" onClick={this.updateImage}> <Icon\r\n                      fontSize=\"large\">arrow_forward_ios</Icon> </NextButton>\r\n              </ActionDiv>\r\n            {\r\n              isOpenAnalysis && images.length > 0 && imageAnalysis.length > 0 &&\r\n              <Analysis imageAnalysis={imageAnalysis[0]}/>\r\n            }\r\n              <Snackbar open={isOpenMsg} TransitionComponent={TransitionUp} onClose={this.onCloseMsg} message={msg}/>\r\n          </div>\r\n        }\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n  axios: state.axios,\r\n  breeds: state.breeds,\r\n  categories: state.categories\r\n})\r\nconst mapDispatchToProps: IHomeActionProps = {}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n`\r\nexport const TypeSettingSection = styled.section`\r\n padding: 8px 16px;\r\n`\r\n","import * as React from 'react'\r\n// Redux\r\nimport {ISettingActionProps, ISettingProps, ISettingState} from \"./index\"\r\nimport {updateSettingType} from \"../../store/setting/actions\"\r\nimport { updateAxios } from \"../../store/axios/actions\"\r\n// Material UI\r\nimport Radio from \"@material-ui/core/Radio\"\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\n// Custom components\r\nimport Header from '../../components/Header/Header'\r\nimport {IStore} from \"../../store\"\r\nimport {connect} from \"react-redux\"\r\n// Styles\r\nimport {Wrapper, TypeSettingSection} from \"./styles\"\r\n\r\nclass Setting extends React.Component<ISettingProps, ISettingState> {\r\n  constructor(props: ISettingProps) {\r\n    super(props)\r\n  }\r\n\r\n  private onChangeType = (event: React.ChangeEvent<any>) => {\r\n    this.setState({ selectedType: event.target.value })\r\n    this.props.updateSettingType(event.target.value)\r\n    this.props.updateAxios(event.target.value)\r\n  }\r\n\r\n  public render() {\r\n    const {setting} = this.props\r\n    return (\r\n      <Wrapper>\r\n        <Header/>\r\n        <TypeSettingSection>\r\n          <h3>Which one would you prefer?</h3>\r\n          <FormControl fullWidth={true}>\r\n            <RadioGroup value={setting.type} onChange={this.onChangeType}>\r\n              <FormControlLabel value=\"CAT\" control={<Radio/>} label=\"CAT\"/>\r\n              <FormControlLabel value=\"DOG\" control={<Radio/>} label=\"DOG\"/>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </TypeSettingSection>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n  setting: state.setting\r\n})\r\n\r\nconst mapDispatchToProps: ISettingActionProps = {\r\n  updateAxios,\r\n  updateSettingType\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Setting)\r\n","import {UPDATE_SETTING_TYPE} from \"../actionTypes\"\r\nimport {IUpdateSettingTypeAction} from \"./index\"\r\n\r\nexport const updateSettingType = (payload: 'CAT' | 'DOG'): IUpdateSettingTypeAction => {\r\n  return {\r\n    type: UPDATE_SETTING_TYPE,\r\n    payload\r\n  }\r\n}\r\n","import * as React from 'react'\r\n// Types\r\nimport {IVotesProps, IVotesState} from \"./index\"\r\nimport {IVotesElement} from \"../../env\"\r\n// Material UI\r\nimport GridList from '@material-ui/core/GridList'\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\n// Services\r\nimport votesService from '../../services/votes'\r\nimport imagesService from '../../services/images'\r\n// Custom components\r\nimport Header from '../../components/Header/Header'\r\n\r\nclass Votes extends React.Component<IVotesProps, IVotesState> {\r\n  constructor(props: IVotesProps) {\r\n    super(props)\r\n    this.state = {\r\n      imagesWithVote: [],\r\n      isOpenDialog: false,\r\n      deletingVoteId: ''\r\n    }\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    const votes: Array<IVotesElement> = await votesService.getVotes({sub_id: 'hai_test'})\r\n    let imagesWithVote = []\r\n\r\n    for (let i = 0; i < votes.length; i++) {\r\n      const image = await imagesService.getImageById(votes[i].image_id)\r\n      const imageWithVote = {...image, vote: votes[i]}\r\n      imagesWithVote.push(imageWithVote)\r\n    }\r\n    console.log(imagesWithVote, 'jjj')\r\n    this.setState({imagesWithVote})\r\n  }\r\n\r\n  private formatDate = (dateStr: string): string => {\r\n    const date = new Date(dateStr)\r\n    return `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()-2000}`\r\n  }\r\n\r\n  private deleteVote = async () => {\r\n    const {deletingVoteId} = this.state\r\n    // Remove locally\r\n    const newImagesWithVote = this.state.imagesWithVote.filter(image => image.vote.id !== deletingVoteId)\r\n    this.setState({imagesWithVote: newImagesWithVote})\r\n    this.closeDialog()\r\n    // Send request to remove\r\n    await votesService.deleteVote(deletingVoteId)\r\n  }\r\n\r\n  private closeDialog = () => {\r\n    this.setState({isOpenDialog: false})\r\n  }\r\n  private openDialog = () => {\r\n    this.setState({isOpenDialog: true})\r\n  }\r\n  private deletingVote = (voteId: string) => {\r\n    this.openDialog()\r\n    this.setState({deletingVoteId: voteId})\r\n  }\r\n\r\n  public render() {\r\n    const {imagesWithVote, isOpenDialog} = this.state\r\n    return (\r\n      <div>\r\n        <Header/>\r\n\r\n        <GridList cellHeight={180}>\r\n          <GridListTile key=\"Subheader\" cols={2} style={{height: 'auto'}}>\r\n            <ListSubheader component=\"div\">All Images You Voted</ListSubheader>\r\n          </GridListTile>\r\n          {\r\n            imagesWithVote.map(image => (\r\n              <GridListTile key={image.id}>\r\n                <img src={image.url} alt={image.id}/>\r\n                <GridListTileBar title=\"\" subtitle={this.formatDate(image.vote.created_at)}\r\n                  actionIcon={\r\n                    <IconButton onClick={() => this.deletingVote(image.vote.id)}>\r\n                      <Icon color=\"secondary\">close</Icon>\r\n                    </IconButton>\r\n                  }/>\r\n              </GridListTile>\r\n            ))\r\n          }\r\n        </GridList>\r\n\r\n        <Dialog open={isOpenDialog} onClose={this.closeDialog}>\r\n          <DialogTitle>Sure to delete it?</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.deleteVote} color=\"primary\">\r\n              Delete\r\n            </Button>\r\n            <Button onClick={this.closeDialog} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Votes\r\n","import * as React from 'react'\r\n// Types\r\nimport {IFavouritesProps, IFavouritesState} from \"./index\"\r\nimport {IFavouritesElement} from \"../../env\"\r\n// Material UI\r\nimport GridList from '@material-ui/core/GridList'\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\n// Services\r\nimport favouritesService from '../../services/faviourites'\r\nimport imagesService from '../../services/images'\r\n// Custom components\r\nimport Header from '../../components/Header/Header'\r\n\r\nclass Favourites extends React.Component<IFavouritesProps, IFavouritesState> {\r\n  constructor(props: IFavouritesProps) {\r\n    super(props)\r\n    this.state = {\r\n      imagesWithFavourite: [],\r\n      isOpenDialog: false,\r\n      deletingFavouriteId: ''\r\n    }\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    const favourites: Array<IFavouritesElement> = await favouritesService.getFavourites({sub_id: 'hai_test'})\r\n    let imagesWithFavourite = []\r\n\r\n    for (let i = 0; i < favourites.length; i++) {\r\n      const image = await imagesService.getImageById(favourites[i].image_id)\r\n      const imageWithFavourite = {...image, favourite: favourites[i]}\r\n      imagesWithFavourite.push(imageWithFavourite)\r\n    }\r\n    this.setState({imagesWithFavourite})\r\n  }\r\n\r\n  private formatDate = (dateStr: string): string => {\r\n    const date = new Date(dateStr)\r\n    return `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()-2000}`\r\n  }\r\n\r\n  private deleteFavourite = async () => {\r\n    const {deletingFavouriteId} = this.state\r\n    // Remove locally\r\n    const newImagesWithFavourite = this.state.imagesWithFavourite.filter(image => image.favourite.id !== deletingFavouriteId)\r\n    this.setState({imagesWithFavourite: newImagesWithFavourite})\r\n    this.closeDialog()\r\n    // Send request to remove\r\n    await favouritesService.deleteFavourite(deletingFavouriteId)\r\n  }\r\n\r\n  private closeDialog = () => {\r\n    this.setState({isOpenDialog: false})\r\n  }\r\n  private openDialog = () => {\r\n    this.setState({isOpenDialog: true})\r\n  }\r\n  private deletingFavourite = (favouriteId: string) => {\r\n    this.openDialog()\r\n    this.setState({deletingFavouriteId: favouriteId})\r\n  }\r\n\r\n  public render() {\r\n    const {imagesWithFavourite, isOpenDialog} = this.state\r\n    return (\r\n      <div>\r\n        <Header/>\r\n\r\n        <GridList cellHeight={180}>\r\n          <GridListTile key=\"Subheader\" cols={2} style={{height: 'auto'}}>\r\n            <ListSubheader component=\"div\">All Your Favourite Images</ListSubheader>\r\n          </GridListTile>\r\n          {\r\n            imagesWithFavourite.map(image => (\r\n              <GridListTile key={image.id}>\r\n                <img src={image.url} alt={image.id}/>\r\n                <GridListTileBar title=\"\" subtitle={this.formatDate(image.favourite.created_at)}\r\n                                 actionIcon={\r\n                                   <IconButton onClick={() => this.deletingFavourite(image.favourite.id)}>\r\n                                     <Icon color=\"secondary\">close</Icon>\r\n                                   </IconButton>\r\n                                 }/>\r\n              </GridListTile>\r\n            ))\r\n          }\r\n        </GridList>\r\n\r\n        <Dialog open={isOpenDialog} onClose={this.closeDialog}>\r\n          <DialogTitle>Sure to delete it?</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.deleteFavourite} color=\"primary\">\r\n              Delete\r\n            </Button>\r\n            <Button onClick={this.closeDialog} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Favourites\r\n","import store from \"../store/store\"\r\nimport {IGetBreedsParams} from \"./index\"\r\nimport {AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getBreeds: (params?: IGetBreedsParams) => {\r\n    return axios\r\n      .get(`/breeds`, {\r\n        params\r\n      })\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getBreedById: (breedId: string) => {\r\n    return axios\r\n      .get(`/breeds/${breedId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import store from \"../store/store\"\r\nimport {AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getCategories: () => {\r\n    return axios\r\n      .get(`/categories`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\n// Redux\nimport {IStore} from \"./store\"\nimport {updateAxios} from \"./store/axios/actions\"\nimport {initBreeds} from \"./store/breeds/actions\"\nimport {initCategories} from \"./store/categories/actions\"\n// Material UI\nimport Card from '@material-ui/core/Card'\n// Pages\nimport Home from './pages/Home/Home'\nimport Setting from './pages/Setting/Setting'\nimport Votes from './pages/Votes/Votes'\nimport Favourites from './pages/Favourites/Favourties'\n// App Styles\nimport './App.scss'\nimport {connect} from \"react-redux\"\nimport {IAppActionProps, IAppProps, IBreed, ICategory} from \"./env\"\n// Services\nimport breedsService from './services/breeds'\nimport categoriesService from './services/categories'\n\nclass App extends Component<IAppProps> {\n  constructor(props: IAppProps) {\n    super(props)\n  }\n\n  public async componentDidMount() {\n    // Init animal type\n    this.props.updateAxios('CAT')\n    // Init animal categories\n    const categories: Array<ICategory> = await categoriesService.getCategories()\n    this.props.initCategories(categories)\n    // Init a breed list\n    const breeds: Array<IBreed> = await breedsService.getBreeds()\n    this.props.initBreeds(breeds)\n  }\n\n  public render() {\n    return (\n      <Router>\n        <Card id=\"app-wrapper\" className=\"app-wrapper\">\n          <Route path=\"/\" exact={true} component={Home}/>\n          <Route path=\"/setting\" component={Setting}/>\n          <Route path=\"/votes\" component={Votes}/>\n          <Route path=\"/favourites\" component={Favourites}/>\n        </Card>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IStore) => ({})\nconst mapDispatchToProps: IAppActionProps = {\n  initBreeds,\n  initCategories,\n  updateAxios\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {INIT_BREEDS} from \"../actionTypes\"\r\nimport {IBreedsAction} from \"./index\"\r\nimport {IBreed} from \"../../env\"\r\n\r\nexport const initBreeds = (payload: Array<IBreed>): IBreedsAction => {\r\n  return {\r\n    type: INIT_BREEDS,\r\n    payload\r\n  }\r\n}\r\n","import {INIT_CATEGORIES} from \"../actionTypes\"\r\nimport {ICategoriesAction} from \"./index\"\r\nimport {ICategory} from \"../../env\"\r\n\r\nexport const initCategories = (payload: Array<ICategory>): ICategoriesAction => {\r\n  return {\r\n    type: INIT_CATEGORIES,\r\n    payload\r\n  }\r\n}\r\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// Redux\nimport {Provider} from \"react-redux\"\nimport store from './store/store'\n// utils\nimport * as serviceWorker from './serviceWorker';\n// Root component\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}