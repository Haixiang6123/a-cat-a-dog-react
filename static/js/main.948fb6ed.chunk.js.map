{"version":3,"sources":["axios/index.ts","axios/secret.ts","store/axios/reducer.ts","store/actionTypes.ts","store/breeds/reducer.ts","store/categories/reducer.ts","store/setting/reducer.ts","store/reducers.ts","store/store.ts","serviceWorker.ts","services/images.ts","services/votes.ts","services/faviourites.ts","pages/Home/styles.ts","components/TransitionUp/TransitionUp.tsx","components/Header/styles.tsx","components/Header/Header.tsx","pages/Home/Home.tsx","store/setting/actions.ts","pages/Setting/styles.ts","pages/Setting/Setting.tsx","pages/Vote/Vote.tsx","pages/Favourite/Favourtie.tsx","services/breeds.ts","services/categories.ts","App.tsx","store/breeds/actions.ts","store/categories/actions.ts","store/axios/actions.ts","index.tsx"],"names":["catAxios","axios","create","baseURL","headers","x-api-key","dogAxios","mapper","CAT","DOG","reducer","state","arguments","length","undefined","action","type","payload","initState","breeds","categories","Object","objectSpread","changedBreedId","defineProperty","changedCategoryId","combineReducers","setting","store","createStore","reducers","Boolean","window","location","hostname","match","getState","subscribe","services_images","getImages","params","get","then","response","data","getImageById","imageId","concat","getUploadedImages","uploadImage","post","Content-Type","catch","error","deleteImage","delete","analyzeImage","votes","getVotes","getVoteById","voteId","addVote","deleteVote","faviourites","getFavourites","getFavouriteById","favouriteId","addFavourite","deleteFavourite","Wrapper","styled","div","_templateObject","ImageWrapper","_templateObject2","Image","img","_templateObject3","ActionDiv","_templateObject4","VoteButton","IconButton","_templateObject5","UploadButton","_templateObject6","FavouriteButton","_templateObject7","AnalyzeButton","_templateObject8","NextButton","_templateObject9","TransitionUp","props","react","index_es","assign","direction","header","styles_templateObject","UserButton","styles_templateObject2","UserName","Typography","styles_templateObject3","SettingButton","styles_templateObject4","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openUser","event","currentTarget","setState","popperEl","isOpenUser","_this$state","styles_Wrapper","onClick","Icon_default","a","react_router_dom","to","Button_default","Popper_default","placement","open","anchorEl","transition","_ref","TransitionProps","Fade_default","timeout","Paper_default","React","Home","vote","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","votesService","sub_id","image_id","images","id","value","isOpenMsg","msg","stop","onChangeImage","_callee2","imageInput","_context2","current","files","abrupt","FormData","append","imagesService","sent","status","toString","startsWith","message","onCloseMsg","_callee3","_context3","updateImage","_callee4","_context4","favourite","_callee5","_context5","favouritesService","_this2","map","image","key","components_Header_Header","src","url","alt","color","fontSize","onChange","accept","style","display","ref","htmlFor","component","TransitionComponent","onClose","connect","initSettingBreeds","initSettingCategories","Setting_styles_templateObject","TypeSetting","FormControl","Setting_styles_templateObject2","BreedSetting","Setting_styles_templateObject3","CategorySetting","Setting_styles_templateObject4","Setting","onChangeType","selectedType","target","onChangeBreed","onChangeCategory","_this$props","Setting_styles_Wrapper","RadioGroup_default","FormControlLabel_default","control","Radio_default","label","breed","String","Checkbox_default","checked","name","category","mapDispatchToProps","updateSettingType","updateSettingBreeds","updateSettingCategories","Vote","Favourtie","services_breeds","services_categories","App","updateAxios","categoriesService","initCategories","breedsService","initBreeds","react_default","createElement","Card_default","className","react_router","path","exact","Favourite","Component","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.948fb6ed.chunk.js","sourcesContent":["import axios, {AxiosInstance} from 'axios';\r\nimport { catKey, dogKey } from \"./secret\"\r\n\r\nconst catAxios: AxiosInstance = axios.create({\r\n  baseURL: 'https://api.thecatapi.com/v1',\r\n  headers: {\r\n    'x-api-key': catKey\r\n  }\r\n});\r\nconst dogAxios: AxiosInstance = axios.create({\r\n  baseURL: 'https://api.thedogapi.com/v1',\r\n  headers: {\r\n    'x-api-key': dogKey\r\n  }\r\n});\r\n\r\nexport {\r\n  catAxios,\r\n  dogAxios\r\n}\r\n","export const catKey = '416848bd-ea2f-4d38-a329-0e858ab5cd38'\r\nexport const dogKey = '89e98203-1b5b-4c32-a67b-e314bf19f4c5'\r\n","import {UPDATE_AXIOS} from \"../actionTypes\";\r\nimport {AxiosInstance} from \"axios\"\r\nimport {catAxios, dogAxios} from \"../../axios\"\r\nimport {IAxiosAction, IAxiosMapper} from \"./index\"\r\n\r\nconst mapper: IAxiosMapper = {\r\n  CAT: catAxios,\r\n  DOG: dogAxios\r\n}\r\n\r\nconst reducer = (state: AxiosInstance=catAxios, action: IAxiosAction) => {\r\n  switch (action.type) {\r\n    case UPDATE_AXIOS:\r\n      return mapper[action.payload]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","export const UPDATE_AXIOS: string = 'UPDATE_AXIOS'\r\nexport const INIT_BREEDS: string = 'INIT_BREEDS'\r\nexport const INIT_CATEGORIES: string = 'INIT_CATEGORIES'\r\n\r\nexport const INIT_SETTING_BREEDS: string = 'INIT_SETTING_BREEDS'\r\nexport const INIT_SETTING_CATEGORIES: string = 'INIT_SETTING_CATEGORIES'\r\nexport const UPDATE_SETTING_TYPE: string = 'UPDATE_SETTING_TYPE'\r\nexport const UPDATE_SETTING_BREEDS: string = 'UPDATE_SETTING_BREEDS'\r\nexport const UPDATE_SETTING_CATEGORIES: string = 'UPDATE_SETTING_CATEGORIES'\r\n","import {INIT_BREEDS} from \"../actionTypes\";\r\nimport {IBreed} from \"../../env\"\r\nimport {IBreedsAction} from \"./index\"\r\n\r\nconst reducer = (state: Array<IBreed>=[], action: IBreedsAction) => {\r\n  switch (action.type) {\r\n    case INIT_BREEDS:\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import {INIT_CATEGORIES} from \"../actionTypes\";\r\nimport {ICategory} from \"../../env\"\r\nimport {ICategoriesAction} from \"./index\"\r\n\r\nconst reducer = (state: Array<ICategory>=[], action: ICategoriesAction) => {\r\n  switch (action.type) {\r\n    case INIT_CATEGORIES:\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import {\r\n  INIT_SETTING_BREEDS,\r\n  INIT_SETTING_CATEGORIES,\r\n  UPDATE_SETTING_BREEDS,\r\n  UPDATE_SETTING_CATEGORIES,\r\n  UPDATE_SETTING_TYPE\r\n} from \"../actionTypes\";\r\nimport {\r\n  IInitBreedsAction,\r\n  IInitCategoriesAction,\r\n  ISettingStore,\r\n  IUpdateBreedsAction,\r\n  IUpdateCategoriesAction,\r\n  IUpdateTypeAction,\r\n  SettingAction\r\n} from \"./index\"\r\n\r\nlet initState: ISettingStore = {\r\n  type: 'CAT',\r\n  breeds: {},\r\n  categories: {}\r\n}\r\n\r\nconst reducer = (state = initState, action: SettingAction) => {\r\n  switch (action.type) {\r\n    case UPDATE_SETTING_TYPE:\r\n      return {...state, type: (<IUpdateTypeAction>action).payload}\r\n    case INIT_SETTING_BREEDS:\r\n      return {...state, breeds: (<IInitBreedsAction>action).payload}\r\n    case UPDATE_SETTING_BREEDS:\r\n      const changedBreedId: string = (<IUpdateBreedsAction>action).payload\r\n      return {...state, breeds: {...state.breeds, [changedBreedId]: true}}\r\n    case INIT_SETTING_CATEGORIES:\r\n      return {...state, categories: (<IInitCategoriesAction>action).payload}\r\n    case UPDATE_SETTING_CATEGORIES:\r\n      const changedCategoryId: string = (<IUpdateCategoriesAction>action).payload\r\n      return {...state, categories: {...state.categories, [changedCategoryId]: true}}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import axios from './axios/reducer'\r\nimport breeds from './breeds/reducer'\r\nimport categories from './categories/reducer'\r\nimport setting from './setting/reducer'\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default combineReducers({\r\n  axios,\r\n  breeds,\r\n  categories,\r\n  setting\r\n})\r\n","import { createStore } from \"redux\";\r\nimport reducers from './reducers'\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import store from \"../store/store\"\r\nimport {\r\n  IGetImageByIdParams, IGetImagesParams, IGetUploadedImagesParams, IUploadImageData\r\n} from \"./index\"\r\nimport {AxiosError, AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getImages: (params?: IGetImagesParams) => {\r\n    return axios\r\n      .get(`/images/search`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getImageById: (imageId: string, params: IGetImageByIdParams) => {\r\n    return axios\r\n      .get(`/images/${imageId}`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getUploadedImages: (params: IGetUploadedImagesParams) => {\r\n    return axios\r\n      .get(`/images`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  uploadImage: (data: FormData) => {\r\n    return axios\r\n      .post(`/images/upload`, data, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      })\r\n      .then((response: AxiosResponse) => response)\r\n      .catch((error: AxiosError) => error.response)\r\n  },\r\n  deleteImage: (imageId: string) => {\r\n    return axios\r\n      .delete(`/images/${imageId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  analyzeImage: (imageId: string) => {\r\n    return axios\r\n      .get(`/images/${imageId}/analysis`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import store from \"../store/store\"\r\nimport {\r\n  IAddVoteData,\r\n  IGetVotesParams,\r\n} from \"./index\"\r\nimport {AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getVotes: (params: IGetVotesParams) => {\r\n    return axios\r\n      .get(`/votes`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getVoteById: (voteId: string) => {\r\n    return axios\r\n      .get(`/votes/${voteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  addVote: (data: IAddVoteData) => {\r\n    return axios\r\n      .post(`/votes`, data)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  deleteVote: (voteId: string) => {\r\n    return axios\r\n      .delete(`/votes/${voteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import store from \"../store/store\"\r\nimport {\r\n  IAddFavouriteData,\r\n  IGetFavouritesParams\r\n} from \"./index\"\r\nimport {AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getFavourites: (params: IGetFavouritesParams) => {\r\n    return axios\r\n      .get(`/favourites`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getFavouriteById: (favouriteId: string) => {\r\n    return axios\r\n      .get(`/favourites/${favouriteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  addFavourite: (data: IAddFavouriteData) => {\r\n    return axios\r\n      .post(`/favourites`, data)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  deleteFavourite: (favouriteId: string) => {\r\n    return axios\r\n      .delete(`/favourites/${favouriteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n`\r\n\r\nexport const ImageWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 510px;\r\n  overflow: hidden;\r\n  border-radius: 12px;\r\n`\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  vertical-align: top;\r\n  border-radius: 8px;\r\n`\r\nexport const ActionDiv = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  border-top: 1px solid #ddd;\r\n`\r\nexport const VoteButton = styled(IconButton)`\r\n`\r\nexport const UploadButton = styled(IconButton)`\r\n  color: #61dafb !important;\r\n`\r\nexport const FavouriteButton = styled(IconButton)` \r\n  color: #fadb14 !important;\r\n`\r\nexport const AnalyzeButton = styled(IconButton)`\r\n  color: #20232a !important;\r\n`\r\nexport const NextButton = styled(IconButton)` \r\n`\r\n","import * as React from 'react'\r\nimport {Slide} from \"@material-ui/core\"\r\n\r\nconst TransitionUp: React.FunctionComponent = (props) => {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nexport default TransitionUp\r\n","import styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nexport const Wrapper = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n  color: #20232a;\r\n  font-size: 1.2em;\r\n`\r\nexport const UserButton = styled(IconButton)`\r\n\r\n`\r\nexport const UserName = styled(Typography)`\r\n  padding: 8px;\r\n`\r\nexport const SettingButton = styled(IconButton)`\r\n`\r\n","import * as React from 'react'\r\n// Material UI\r\nimport Icon from '@material-ui/core/Icon'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Fade from \"@material-ui/core/Fade\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Popper from \"@material-ui/core/Popper\"\r\n// Styles\r\nimport {Wrapper, UserButton, UserName, SettingButton} from \"./styles\"\r\n// Types\r\nimport {IHeaderProps, IHeaderState} from \"./index\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass Header extends React.Component<IHeaderProps, IHeaderState> {\r\n  constructor(props: IHeaderProps) {\r\n    super(props)\r\n    this.state = {\r\n      popperEl: null,\r\n      isOpenUser: false,\r\n    }\r\n  }\r\n\r\n  private openUser = (event: any) => {\r\n    const {currentTarget} = event\r\n    this.setState({\r\n      popperEl: currentTarget,\r\n      isOpenUser: !this.state.isOpenUser,\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    const {isOpenUser, popperEl} = this.state\r\n    return (\r\n      <Wrapper>\r\n        <UserButton onClick={this.openUser}> <Icon>person</Icon> </UserButton>\r\n        <Link to=\"/\"><Button>🐱A🐶</Button></Link>\r\n        <Link to=\"/setting\"><SettingButton><Icon>settings</Icon></SettingButton></Link>\r\n\r\n        <Popper placement=\"bottom-start\" open={isOpenUser} anchorEl={popperEl} transition>\r\n          {({ TransitionProps }) => (\r\n            <Fade {...TransitionProps} timeout={350}>\r\n              <Paper>\r\n                <UserName>hai_test</UserName>\r\n              </Paper>\r\n            </Fade>\r\n          )}\r\n        </Popper>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import * as React from 'react'\r\n// Material\r\nimport Icon from '@material-ui/core/Icon'\r\n// Redux\r\nimport {IStore} from \"../../store\"\r\nimport {connect} from \"react-redux\"\r\n// Material UI\r\nimport {Snackbar} from \"@material-ui/core\"\r\n// Services\r\nimport imagesService from '../../services/images'\r\nimport votesService from '../../services/votes'\r\nimport favouritesService from '../../services/faviourites'\r\n// Types\r\nimport {IHomeActionProps, IHomeProps, IHomeState} from \"./index\"\r\n// Styles\r\nimport { Wrapper, ImageWrapper, Image, ActionDiv, VoteButton, NextButton, FavouriteButton, UploadButton, AnalyzeButton } from \"./styles\"\r\n// Types\r\nimport {IImage} from \"../../env\"\r\nimport {AxiosResponse} from \"axios\"\r\n// Custom components\r\nimport TransitionUp from \"../../components/TransitionUp/TransitionUp\"\r\nimport Header from '../../components/Header/Header'\r\n\r\nclass Home extends React.Component<IHomeProps, IHomeState> {\r\n  constructor(props: IHomeProps) {\r\n    super(props);\r\n    this.state = {\r\n      images: [],\r\n      imageInput: React.createRef(),\r\n      isOpenMsg: false,\r\n      msg: ''\r\n    }\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    await this.updateImage()\r\n  }\r\n\r\n  private vote = async () => {\r\n    await votesService.addVote({\r\n      sub_id: 'hai_test',\r\n      image_id: this.state.images[0].id,\r\n      value: 1\r\n    })\r\n    this.setState({isOpenMsg: true, msg: 'Vote it'})\r\n  }\r\n\r\n  private onChangeImage = async () => {\r\n    const {imageInput} = this.state\r\n    if (!imageInput.current || !imageInput.current.files || imageInput.current.files.length === 0) {\r\n      return\r\n    }\r\n\r\n    const data = new FormData();\r\n    data.append('sub_id', 'hai_test');\r\n    data.append('file', imageInput.current.files[0]);\r\n    const response: AxiosResponse = await imagesService.uploadImage(data)\r\n    // Error\r\n    if (response.status.toString().startsWith('2')) {\r\n      this.setState({isOpenMsg: true, msg: 'Upload successfully'})\r\n    }\r\n    else {\r\n      this.setState({isOpenMsg: true, msg: response.data.message})\r\n    }\r\n  }\r\n\r\n  private onCloseMsg = async () => {\r\n    this.setState({isOpenMsg: false})\r\n  }\r\n\r\n  private updateImage = async () => {\r\n    const images: Array<IImage> = await imagesService.getImages()\r\n    this.setState({ images })\r\n  }\r\n\r\n  private favourite = async () => {\r\n    await favouritesService.addFavourite({\r\n      sub_id: 'hai_test',\r\n      image_id: this.state.images[0].id\r\n    })\r\n    this.setState({isOpenMsg: true, msg: 'Add to favourite'})\r\n  }\r\n\r\n  public render() {\r\n    const {images, imageInput, isOpenMsg, msg} = this.state\r\n    return (\r\n      <Wrapper>\r\n        {\r\n          images.map(image =>\r\n            <div key={image.id}>\r\n              <Header/>\r\n              <ImageWrapper>\r\n                <Image src={image.url} alt=\"Animal Image\"/>\r\n              </ImageWrapper>\r\n              <ActionDiv>\r\n                <VoteButton color=\"primary\" onClick={this.vote}> <Icon fontSize=\"large\">thumb_up</Icon> </VoteButton>\r\n                <input onChange={this.onChangeImage} accept=\"image/*\" style={{display: 'none'}} id=\"new-file\" type=\"file\" ref={imageInput} />\r\n                <label htmlFor=\"new-file\">\r\n                  <UploadButton component=\"span\"><Icon>cloud_upload</Icon></UploadButton>\r\n                </label>\r\n                <FavouriteButton onClick={this.favourite}> <Icon fontSize=\"large\">star</Icon> </FavouriteButton>\r\n                <AnalyzeButton><Icon>show_chart</Icon></AnalyzeButton>\r\n                <NextButton color=\"secondary\" onClick={this.updateImage}> <Icon fontSize=\"large\">arrow_forward_ios</Icon> </NextButton>\r\n              </ActionDiv>\r\n\r\n              <Snackbar open={isOpenMsg} TransitionComponent={TransitionUp} onClose={this.onCloseMsg} message={msg}/>\r\n            </div>\r\n          )\r\n        }\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n  axios: state.axios,\r\n  breeds: state.breeds,\r\n  categories: state.categories\r\n})\r\nconst mapDispatchToProps: IHomeActionProps = {\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","import {\r\n  INIT_SETTING_BREEDS,\r\n  INIT_SETTING_CATEGORIES,\r\n  UPDATE_SETTING_BREEDS,\r\n  UPDATE_SETTING_CATEGORIES,\r\n  UPDATE_SETTING_TYPE\r\n} from \"../actionTypes\"\r\nimport {\r\n  IInitBreedsAction,\r\n  IInitCategoriesAction,\r\n  ISettingItem,\r\n  IUpdateBreedsAction,\r\n  IUpdateCategoriesAction,\r\n  IUpdateTypeAction\r\n} from \"./index\"\r\n\r\nexport const updateSettingType = (payload: 'CAT' | 'DOG'): IUpdateTypeAction => {\r\n  return {\r\n    type: UPDATE_SETTING_TYPE,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const initSettingBreeds = (payload: ISettingItem): IInitBreedsAction => {\r\n  return {\r\n    type: INIT_SETTING_BREEDS,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const updateSettingBreeds = (payload: string): IUpdateBreedsAction => {\r\n  return {\r\n    type: UPDATE_SETTING_BREEDS,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const initSettingCategories = (payload: ISettingItem): IInitCategoriesAction => {\r\n  return {\r\n    type: INIT_SETTING_CATEGORIES,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const updateSettingCategories = (payload: string): IUpdateCategoriesAction => {\r\n  return {\r\n    type: UPDATE_SETTING_CATEGORIES,\r\n    payload\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\n\r\nexport const Wrapper = styled.div`\r\n  h3 {\r\n    text-align: center;\r\n  }\r\n`\r\nexport const TypeSetting = styled(FormControl)`\r\n`\r\nexport const BreedSetting = styled(FormControl)`\r\n`\r\nexport const CategorySetting = styled(FormControl)`\r\n`\r\n","import * as React from 'react'\r\n// Redux\r\nimport {ISettingActionProps, ISettingProps, ISettingState} from \"./index\"\r\nimport {\r\n  initSettingBreeds,\r\n  initSettingCategories,\r\n  updateSettingBreeds,\r\n  updateSettingCategories,\r\n  updateSettingType\r\n} from \"../../store/setting/actions\"\r\n// Material UI\r\nimport Radio from \"@material-ui/core/Radio\"\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\n// Custom components\r\nimport Header from '../../components/Header/Header'\r\nimport {IStore} from \"../../store\"\r\nimport {connect} from \"react-redux\"\r\n// Styles\r\nimport {BreedSetting, CategorySetting, TypeSetting, Wrapper} from \"./styles\"\r\n\r\nclass Setting extends React.Component<ISettingProps, ISettingState> {\r\n  constructor(props: ISettingProps) {\r\n    super(props)\r\n  }\r\n\r\n  public async componentDidMount(){\r\n    initSettingBreeds({})\r\n    initSettingCategories({})\r\n  }\r\n\r\n  private onChangeType = (event: React.ChangeEvent<any>) => {\r\n    this.setState({\r\n      selectedType: event.target.value\r\n    })\r\n  }\r\n\r\n  private onChangeBreed = (event: React.ChangeEvent<any>) => {\r\n  }\r\n\r\n  private onChangeCategory = (event: React.ChangeEvent<any>) => {\r\n\r\n  }\r\n\r\n  public render() {\r\n    const {breeds, categories, setting} = this.props\r\n    return (\r\n      <Wrapper>\r\n        <Header/>\r\n        <section>\r\n          <h3>Type Setting</h3>\r\n          <TypeSetting>\r\n            <RadioGroup value={setting.type} onChange={this.onChangeType}>\r\n              <FormControlLabel value=\"CAT\" control={<Radio/>} label=\"CAT\"/>\r\n              <FormControlLabel value=\"DOG\" control={<Radio/>} label=\"DOG\"/>\r\n            </RadioGroup>\r\n          </TypeSetting>\r\n        </section>\r\n        <section>\r\n          <h3>Breed Setting</h3>\r\n          <BreedSetting>\r\n            {\r\n              breeds.map(breed =>\r\n                <FormControlLabel\r\n                  key={breed.id}\r\n                  value={String(breed.id)}\r\n                  control={<Checkbox/>}\r\n                  onChange={this.onChangeBreed}\r\n                  checked={Boolean(setting.breeds[breed.id])}\r\n                  label={breed.name}\r\n                />\r\n              )\r\n            }\r\n          </BreedSetting>\r\n        </section>\r\n        <section>\r\n          <h3>Category Setting</h3>\r\n          <CategorySetting>\r\n            {\r\n              categories.map(category =>\r\n                <FormControlLabel\r\n                  key={category.id}\r\n                  value={String(category.id)}\r\n                  control={<Checkbox/>}\r\n                  onChange={this.onChangeCategory}\r\n                  checked={Boolean(setting.categories[category.id])}\r\n                  label={category.name}\r\n                />\r\n              )\r\n            }\r\n          </CategorySetting>\r\n        </section>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n  breeds: state.breeds,\r\n  categories: state.categories,\r\n  setting: state.setting\r\n})\r\n\r\nconst mapDispatchToProps: ISettingActionProps = {\r\n  updateSettingType,\r\n  updateSettingBreeds,\r\n  updateSettingCategories,\r\n  initSettingBreeds,\r\n  initSettingCategories\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Setting)\r\n","import * as React from 'react'\r\n\r\nclass Vote extends React.Component {\r\n  public render() {\r\n    return (\r\n      <div>\r\n        Vote Page\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Vote\r\n","import * as React from 'react'\r\n\r\nclass Favourtie extends React.Component{\r\n  public render() {\r\n    return (\r\n      <div>\r\n        Favourite Page\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Favourtie\r\n","import store from \"../store/store\"\r\nimport {IGetBreedsParams} from \"./index\"\r\nimport {AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getBreeds: (params?: IGetBreedsParams) => {\r\n    return axios\r\n      .get(`/breeds`, {\r\n        params\r\n      })\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getBreedById: (breedId: string) => {\r\n    return axios\r\n      .get(`/breeds/${breedId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import store from \"../store/store\"\r\nimport {AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getCategories: () => {\r\n    return axios\r\n      .get(`/categories`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\n// Redux\nimport {IStore} from \"./store\"\nimport {updateAxios} from \"./store/axios/actions\"\nimport {initBreeds} from \"./store/breeds/actions\"\nimport {initCategories} from \"./store/categories/actions\"\n// Material UI\nimport Card from '@material-ui/core/Card'\n// Pages\nimport Home from './pages/Home/Home'\nimport Setting from './pages/Setting/Setting'\nimport Vote from './pages/Vote/Vote'\nimport Favourite from './pages/Favourite/Favourtie'\n// App Styles\nimport './App.scss'\nimport {connect} from \"react-redux\"\nimport {IAppActionProps, IAppProps, IBreed, ICategory} from \"./env\"\n// Services\nimport breedsService from './services/breeds'\nimport categoriesService from './services/categories'\n\nclass App extends Component<IAppProps> {\n  constructor(props: IAppProps) {\n    super(props)\n  }\n\n  public async componentDidMount() {\n    // Init animal type\n    this.props.updateAxios('CAT')\n    // Init animal categories\n    const categories: Array<ICategory> = await categoriesService.getCategories()\n    this.props.initCategories(categories)\n    // Init a breed list\n    const breeds: Array<IBreed> = await breedsService.getBreeds()\n    this.props.initBreeds(breeds)\n  }\n\n  public render() {\n    return (\n      <Router>\n        <Card className=\"app-wrapper\">\n          <Route path=\"/\" exact={true} component={Home}/>\n          <Route path=\"/setting\" component={Setting}/>\n          <Route path=\"/vote\" component={Vote}/>\n          <Route path=\"/favourite\" component={Favourite}/>\n        </Card>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IStore) => ({})\nconst mapDispatchToProps: IAppActionProps = {\n  initBreeds,\n  initCategories,\n  updateAxios\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {INIT_BREEDS} from \"../actionTypes\"\r\nimport {IBreedsAction} from \"./index\"\r\nimport {IBreed} from \"../../env\"\r\n\r\nexport const initBreeds = (payload: Array<IBreed>): IBreedsAction => {\r\n  return {\r\n    type: INIT_BREEDS,\r\n    payload\r\n  }\r\n}\r\n","import {INIT_CATEGORIES} from \"../actionTypes\"\r\nimport {ICategoriesAction} from \"./index\"\r\nimport {ICategory} from \"../../env\"\r\n\r\nexport const initCategories = (payload: Array<ICategory>): ICategoriesAction => {\r\n  return {\r\n    type: INIT_CATEGORIES,\r\n    payload\r\n  }\r\n}\r\n","import {UPDATE_AXIOS} from \"../actionTypes\"\r\nimport {IAxiosAction} from \"./index\"\r\n\r\nexport const updateAxios = (payload: 'CAT'|'DOG'): IAxiosAction => {\r\n  return {\r\n    type: UPDATE_AXIOS,\r\n    payload\r\n  }\r\n}\r\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// Redux\nimport {Provider} from \"react-redux\"\nimport store from './store/store'\n// utils\nimport * as serviceWorker from './serviceWorker';\n// Root component\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}