{"version":3,"sources":["axios/index.ts","axios/secret.ts","store/axios/reducer.ts","store/actionTypes.ts","store/breeds/reducer.ts","store/categories/reducer.ts","store/setting/reducer.ts","store/reducers.ts","store/store.ts","serviceWorker.ts","store/axios/actions.ts","services/images.ts","services/votes.ts","services/faviourites.ts","pages/Home/styles.ts","components/TransitionUp/TransitionUp.tsx","components/Header/styles.tsx","components/Header/Header.tsx","components/Analysis/echartsHelpers.ts","components/Analysis/Analysis.tsx","pages/Home/Home.tsx","pages/Setting/styles.ts","pages/Setting/Setting.tsx","store/setting/actions.ts","pages/Votes/Votes.tsx","pages/Favourites/Favourties.tsx","services/breeds.ts","services/categories.ts","App.tsx","store/breeds/actions.ts","store/categories/actions.ts","index.tsx"],"names":["catAxios","axios","create","baseURL","headers","x-api-key","dogAxios","mapper","CAT","DOG","reducer","state","arguments","length","undefined","action","type","payload","initState","Object","objectSpread","combineReducers","breeds","categories","setting","store","createStore","reducers","Boolean","window","location","hostname","match","updateAxios","getState","subscribe","services_images","getImages","params","get","then","response","data","getImageById","imageId","concat","getUploadedImages","uploadImage","post","Content-Type","catch","error","deleteImage","delete","analyzeImage","services_votes","getVotes","getVoteById","voteId","addVote","deleteVote","faviourites","getFavourites","getFavouriteById","favouriteId","addFavourite","deleteFavourite","Wrapper","styled","div","_templateObject","ImageWrapper","_templateObject2","Image","img","_templateObject3","ActionDiv","_templateObject4","VoteButton","IconButton","_templateObject5","UploadButton","_templateObject6","FavouriteButton","_templateObject7","AnalyzeButton","_templateObject8","NextButton","_templateObject9","TransitionUp","props","react","index_es","assign","direction","header","styles_templateObject","UserButton","styles_templateObject2","UserName","Typography","styles_templateObject3","SettingButton","styles_templateObject4","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleUser","event","setState","userEl","currentTarget","isOpenUser","toggleSetting","settingEl","isOpenSetting","_this2","_this$state","history","styles_Wrapper","onClick","Icon_default","a","react_router_dom","to","Button_default","Popper_default","open","anchorEl","transition","disablePortal","_ref","TransitionProps","placement","Grow_default","style","transformOrigin","Paper_default","ClickAwayListener_default","onClickAway","MenuList_default","MenuItem_default","push","_ref2","Fade_default","timeout","React","withRouter","getOptions","imageAnalysis","labels","map","label","Name","Number","Confidence","toFixed","value","name","title","text","subtext","image_id","x","tooltip","trigger","formatter","series","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","Analysis","formatDate","dateStr","date","Date","getMonth","getDate","getFullYear","drawPie","pieEl","document","querySelector","myChart","echarts","init","options","setOption","id","height","marginBottom","vendor","created_at","Home","vote","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","votesService","sub_id","images","isOpenMsg","msg","stop","onChangeImage","_callee2","imageInput","_context2","current","files","abrupt","FormData","append","imagesService","sent","status","toString","startsWith","message","onCloseMsg","_callee3","_context3","updateImage","_callee4","_context4","toggleAnalysisCollapse","_callee5","wrapper","_context5","isOpenAnalysis","analyze","scroll","favourite","_callee6","_context6","favouritesService","_callee7","_context7","key","components_Header_Header","src","url","alt","color","fontSize","onChange","accept","display","ref","htmlFor","component","components_Analysis_Analysis","TransitionComponent","onClose","connect","Setting_styles_templateObject","TypeSettingSection","section","Setting_styles_templateObject2","Setting","onChangeType","selectedType","target","updateSettingType","Setting_styles_Wrapper","FormControl_default","fullWidth","RadioGroup_default","FormControlLabel_default","control","Radio_default","mapDispatchToProps","Votes","deletingVoteId","newImagesWithVote","imagesWithVote","filter","image","closeDialog","isOpenDialog","openDialog","deletingVote","votes","i","imageWithVote","textAlign","GridList_default","cellHeight","GridListTile_default","GridListTileBar_default","subtitle","actionIcon","IconButton_default","Dialog_default","DialogTitle_default","DialogActions_default","Favourites","deletingFavouriteId","newImagesWithFavourite","imagesWithFavourite","deletingFavourite","favourites","imageWithFavourite","services_breeds","services_categories","App","categoriesService","initCategories","breedsService","initBreeds","react_default","createElement","Card_default","className","react_router","path","exact","Component","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11e029c9.chunk.js","sourcesContent":["import axios, {AxiosInstance} from 'axios';\r\nimport { catKey, dogKey } from \"./secret\"\r\n\r\nconst catAxios: AxiosInstance = axios.create({\r\n  baseURL: 'https://api.thecatapi.com/v1',\r\n  headers: {\r\n    'x-api-key': catKey\r\n  }\r\n});\r\nconst dogAxios: AxiosInstance = axios.create({\r\n  baseURL: 'https://api.thedogapi.com/v1',\r\n  headers: {\r\n    'x-api-key': dogKey\r\n  }\r\n});\r\n\r\nexport {\r\n  catAxios,\r\n  dogAxios\r\n}\r\n","export const catKey = '416848bd-ea2f-4d38-a329-0e858ab5cd38'\r\nexport const dogKey = '89e98203-1b5b-4c32-a67b-e314bf19f4c5'\r\n","import {UPDATE_AXIOS} from \"../actionTypes\";\r\nimport {AxiosInstance} from \"axios\"\r\nimport {catAxios, dogAxios} from \"../../axios\"\r\nimport {IAxiosAction, IAxiosMapper} from \"./index\"\r\n\r\nconst mapper: IAxiosMapper = {\r\n  CAT: catAxios,\r\n  DOG: dogAxios\r\n}\r\n\r\nconst reducer = (state: AxiosInstance=catAxios, action: IAxiosAction) => {\r\n  switch (action.type) {\r\n    case UPDATE_AXIOS:\r\n      return mapper[action.payload]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","export const UPDATE_AXIOS: string = 'UPDATE_AXIOS'\r\nexport const INIT_BREEDS: string = 'INIT_BREEDS'\r\nexport const INIT_CATEGORIES: string = 'INIT_CATEGORIES'\r\n\r\nexport const INIT_SETTING_BREEDS: string = 'INIT_SETTING_BREEDS'\r\nexport const INIT_SETTING_CATEGORIES: string = 'INIT_SETTING_CATEGORIES'\r\nexport const UPDATE_SETTING_TYPE: string = 'UPDATE_SETTING_TYPE'\r\nexport const UPDATE_SETTING_BREEDS: string = 'UPDATE_SETTING_BREEDS'\r\nexport const UPDATE_SETTING_CATEGORIES: string = 'UPDATE_SETTING_CATEGORIES'\r\n","import {INIT_BREEDS} from \"../actionTypes\";\r\nimport {IBreed} from \"../../env\"\r\nimport {IBreedsAction} from \"./index\"\r\n\r\nconst reducer = (state: Array<IBreed>=[], action: IBreedsAction) => {\r\n  switch (action.type) {\r\n    case INIT_BREEDS:\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import {INIT_CATEGORIES} from \"../actionTypes\";\r\nimport {ICategory} from \"../../env\"\r\nimport {ICategoriesAction} from \"./index\"\r\n\r\nconst reducer = (state: Array<ICategory>=[], action: ICategoriesAction) => {\r\n  switch (action.type) {\r\n    case INIT_CATEGORIES:\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import {UPDATE_SETTING_TYPE} from \"../actionTypes\";\r\nimport {ISettingStore, IUpdateSettingTypeAction, SettingAction} from \"./index\"\r\n\r\nlet initState: ISettingStore = {\r\n  type: 'CAT',\r\n}\r\n\r\nconst reducer = (state = initState, action: SettingAction) => {\r\n  switch (action.type) {\r\n    case UPDATE_SETTING_TYPE:\r\n      return {...state, type: (<IUpdateSettingTypeAction>action).payload}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import axios from './axios/reducer'\r\nimport breeds from './breeds/reducer'\r\nimport categories from './categories/reducer'\r\nimport setting from './setting/reducer'\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default combineReducers({\r\n  axios,\r\n  breeds,\r\n  categories,\r\n  setting\r\n})\r\n","import { createStore } from \"redux\";\r\nimport reducers from './reducers'\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {UPDATE_AXIOS} from \"../actionTypes\"\r\nimport {IAxiosAction} from \"./index\"\r\n\r\nexport const updateAxios = (payload: 'CAT'|'DOG'): IAxiosAction => {\r\n  return {\r\n    type: UPDATE_AXIOS,\r\n    payload\r\n  }\r\n}\r\n","import store from \"../store/store\"\r\nimport {IGetImagesParams, IGetUploadedImagesParams} from \"./index\"\r\nimport {AxiosError, AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getImages: (params?: IGetImagesParams) => {\r\n    return axios\r\n      .get(`/images/search`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getImageById: (imageId: string) => {\r\n    return axios\r\n      .get(`/images/${imageId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getUploadedImages: (params: IGetUploadedImagesParams) => {\r\n    return axios\r\n      .get(`/images`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  uploadImage: (data: FormData) => {\r\n    return axios\r\n      .post(`/images/upload`, data, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      })\r\n      .then((response: AxiosResponse) => response)\r\n      .catch((error: AxiosError) => error.response)\r\n  },\r\n  deleteImage: (imageId: string) => {\r\n    return axios\r\n      .delete(`/images/${imageId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  analyzeImage: (imageId: string) => {\r\n    return axios\r\n      .get(`/images/${imageId}/analysis`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import store from \"../store/store\"\r\nimport {\r\n  IAddVoteData,\r\n  IGetVotesParams,\r\n} from \"./index\"\r\nimport {AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getVotes: (params: IGetVotesParams) => {\r\n    return axios\r\n      .get(`/votes`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getVoteById: (voteId: string) => {\r\n    return axios\r\n      .get(`/votes/${voteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  addVote: (data: IAddVoteData) => {\r\n    return axios\r\n      .post(`/votes`, data)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  deleteVote: (voteId: string) => {\r\n    return axios\r\n      .delete(`/votes/${voteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import store from \"../store/store\"\r\nimport {\r\n  IAddFavouriteData,\r\n  IGetFavouritesParams\r\n} from \"./index\"\r\nimport {AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getFavourites: (params: IGetFavouritesParams) => {\r\n    return axios\r\n      .get(`/favourites`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getFavouriteById: (favouriteId: string) => {\r\n    return axios\r\n      .get(`/favourites/${favouriteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  addFavourite: (data: IAddFavouriteData) => {\r\n    return axios\r\n      .post(`/favourites`, data)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  deleteFavourite: (favouriteId: string) => {\r\n    return axios\r\n      .delete(`/favourites/${favouriteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n`\r\n\r\nexport const ImageWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 510px;\r\n  overflow: hidden;\r\n  border-radius: 12px;\r\n`\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  vertical-align: top;\r\n  border-radius: 8px;\r\n`\r\nexport const ActionDiv = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  border-top: 1px solid #ddd;\r\n`\r\nexport const VoteButton = styled(IconButton)`\r\n`\r\nexport const UploadButton = styled(IconButton)`\r\n  color: #61dafb !important;\r\n`\r\nexport const FavouriteButton = styled(IconButton)` \r\n  color: #fadb14 !important;\r\n`\r\nexport const AnalyzeButton = styled(IconButton)`\r\n  color: #20232a !important;\r\n`\r\nexport const NextButton = styled(IconButton)` \r\n`\r\n","import * as React from 'react'\r\nimport {Slide} from \"@material-ui/core\"\r\n\r\nconst TransitionUp: React.FunctionComponent = (props) => {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nexport default TransitionUp\r\n","import styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nexport const Wrapper = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n  color: #20232a;\r\n  font-size: 1.2em;\r\n  a {\r\n    color: inherit;\r\n  }\r\n`\r\nexport const UserButton = styled(IconButton)`\r\n\r\n`\r\nexport const UserName = styled(Typography)`\r\n  padding: 8px;\r\n`\r\nexport const SettingButton = styled(IconButton)`\r\n`\r\n","import * as React from 'react'\r\n// Router\r\nimport {withRouter} from \"react-router-dom\"\r\n// Material UI\r\nimport Icon from '@material-ui/core/Icon'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Grow from \"@material-ui/core/Grow\"\r\nimport Popper from \"@material-ui/core/Popper\"\r\nimport Fade from \"@material-ui/core/Fade\"\r\nimport MenuList from '@material-ui/core/MenuList'\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n// Styles\r\nimport {Wrapper, UserButton, UserName, SettingButton} from \"./styles\"\r\n// Types\r\nimport {IHeaderProps, IHeaderState} from \"./index\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass Header extends React.Component<IHeaderProps, IHeaderState> {\r\n  constructor(props: IHeaderProps) {\r\n    super(props)\r\n    this.state = {\r\n      isOpenUser: false,\r\n      userEl: null,\r\n      isOpenSetting: false,\r\n      settingEl: null\r\n    }\r\n  }\r\n\r\n  private toggleUser = (event: any) => {\r\n    this.setState({\r\n      userEl: event.currentTarget,\r\n      isOpenUser: !this.state.isOpenUser,\r\n    });\r\n  }\r\n\r\n  private toggleSetting = (event: any) => {\r\n    this.setState({\r\n      settingEl: event.currentTarget,\r\n      isOpenSetting: !this.state.isOpenSetting,\r\n    })\r\n  }\r\n\r\n  public render() {\r\n    const {isOpenUser, userEl, isOpenSetting, settingEl} = this.state\r\n    const {history} = this.props\r\n    return (\r\n      <Wrapper>\r\n        <UserButton onClick={this.toggleUser}> <Icon>person</Icon> </UserButton>\r\n        <Link to=\"/\"><Button>🐱A🐶</Button></Link>\r\n        <SettingButton onClick={this.toggleSetting}><Icon>settings</Icon></SettingButton>\r\n\r\n        <Popper open={isOpenSetting} anchorEl={settingEl} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow {...TransitionProps} style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}>\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={this.toggleSetting}>\r\n                  <MenuList>\r\n                    <MenuItem onClick={() => history.push('/setting')}>General Setting</MenuItem>\r\n                    <MenuItem onClick={() => history.push('/votes')}>Voted Images</MenuItem>\r\n                    <MenuItem onClick={() => history.push('/favourites')}>Favourite Images</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n\r\n        <Popper placement=\"bottom-start\" open={isOpenUser} anchorEl={userEl} transition>\r\n          {({ TransitionProps }) => (\r\n            <Fade {...TransitionProps} timeout={350}>\r\n              <Paper>\r\n                <UserName>hai_test</UserName>\r\n              </Paper>\r\n            </Fade>\r\n          )}\r\n        </Popper>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import {IImageAnalysis} from \"../../env\"\r\n\r\nexport const getOptions = (imageAnalysis: IImageAnalysis) => {\r\n  const xLabels = imageAnalysis.labels\r\n    .map(label => label.Name)\r\n  const yValues = imageAnalysis.labels\r\n    .map(label => Number(Number(label.Confidence).toFixed(2)))\r\n  const data = imageAnalysis.labels\r\n    .map(label => ({\r\n      value: Number(label.Confidence.toFixed(2)),\r\n      name: label.Name\r\n    }))\r\n\r\n  return {\r\n    title: {\r\n      text: 'Image Analysis',\r\n      subtext: `ID: ${imageAnalysis.image_id}`,\r\n      x: 'center'\r\n    },\r\n    tooltip: {\r\n      trigger: 'item',\r\n      formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Confidence',\r\n        type: 'pie',\r\n        radius: '55%',\r\n        center: ['50%', '60%'],\r\n        data: data,\r\n        itemStyle: {\r\n          emphasis: {\r\n            shadowBlur: 10,\r\n            shadowOffsetX: 0,\r\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  };\r\n}\r\n","import * as React from 'react'\n// ECharts\nimport echarts from 'echarts'\n// Types\nimport {IAnalysisProps, IAnalysisState} from \"./index\"\n// Helpers\nimport {getOptions} from \"./echartsHelpers\"\n\nclass Analysis extends React.Component<IAnalysisProps, IAnalysisState> {\n  constructor(props: IAnalysisProps) {\n    super(props)\n  }\n\n  private formatDate = (dateStr: string): string => {\n    const date = new Date(dateStr)\n    return `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear() - 2000}`\n  }\n\n  public componentDidMount(): void {\n    this.drawPie()\n  }\n\n  private drawPie = () => {\n    const pieEl: HTMLCanvasElement | null = document.querySelector('#image-analysis-pie')\n    if (!pieEl) {\n      return\n    }\n    const myChart = echarts.init(pieEl);\n    const options: any = getOptions(this.props.imageAnalysis)\n    myChart.setOption(options);\n  }\n\n  public render() {\n    const {imageAnalysis} = this.props\n    return (\n      <div>\n        <div id=\"image-analysis-pie\" style={{height: 300}}/>\n        <p style={{marginBottom: 12}}><strong>Vendor: </strong>{imageAnalysis.vendor}</p>\n        <p><strong>Created At: </strong>{this.formatDate(imageAnalysis.created_at)}</p>\n      </div>\n    )\n  }\n}\n\nexport default Analysis\n","import * as React from 'react'\r\n// Material\r\nimport Icon from '@material-ui/core/Icon'\r\n// Redux\r\nimport {IStore} from \"../../store\"\r\nimport {connect} from \"react-redux\"\r\n// Material UI\r\nimport {Snackbar} from \"@material-ui/core\"\r\n// Services\r\nimport imagesService from '../../services/images'\r\nimport votesService from '../../services/votes'\r\nimport favouritesService from '../../services/faviourites'\r\n// Types\r\nimport {IHomeActionProps, IHomeProps, IHomeState} from \"./index\"\r\n// Styles\r\nimport {\r\n  ActionDiv,\r\n  AnalyzeButton,\r\n  FavouriteButton,\r\n  Image,\r\n  ImageWrapper,\r\n  NextButton,\r\n  UploadButton,\r\n  VoteButton,\r\n  Wrapper\r\n} from \"./styles\"\r\n// Types\r\nimport {IImage} from \"../../env\"\r\nimport {AxiosResponse} from \"axios\"\r\n// Custom components\r\nimport TransitionUp from \"../../components/TransitionUp/TransitionUp\"\r\nimport Header from '../../components/Header/Header'\r\nimport Analysis from \"../../components/Analysis/Analysis\"\r\n\r\nclass Home extends React.Component<IHomeProps, IHomeState> {\r\n  constructor(props: IHomeProps) {\r\n    super(props);\r\n    this.state = {\r\n      images: [],\r\n      imageInput: React.createRef(),\r\n      isOpenMsg: false,\r\n      msg: '',\r\n      isOpenAnalysis: false,\r\n      imageAnalysis: []\r\n    }\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    await this.updateImage()\r\n  }\r\n\r\n  private vote = async () => {\r\n    await votesService.addVote({\r\n      sub_id: 'hai_test',\r\n      image_id: this.state.images[0].id,\r\n      value: 1\r\n    })\r\n    this.setState({isOpenMsg: true, msg: 'Vote it'})\r\n  }\r\n\r\n  private onChangeImage = async () => {\r\n    const {imageInput} = this.state\r\n    if (!imageInput.current || !imageInput.current.files || imageInput.current.files.length === 0) {\r\n      return\r\n    }\r\n\r\n    const data = new FormData();\r\n    data.append('sub_id', 'hai_test');\r\n    data.append('file', imageInput.current.files[0]);\r\n    const response: AxiosResponse = await imagesService.uploadImage(data)\r\n    // Error\r\n    if (response.status.toString().startsWith('2')) {\r\n      this.setState({isOpenMsg: true, msg: 'Upload successfully'})\r\n    } else {\r\n      this.setState({isOpenMsg: true, msg: response.data.message})\r\n    }\r\n  }\r\n\r\n  private onCloseMsg = async () => {\r\n    this.setState({isOpenMsg: false})\r\n  }\r\n\r\n  private updateImage = async () => {\r\n    const images: Array<IImage> = await imagesService.getImages()\r\n    this.setState({images})\r\n  }\r\n\r\n  private toggleAnalysisCollapse = async () => {\r\n    await this.setState({isOpenAnalysis: !this.state.isOpenAnalysis})\r\n    if (this.state.isOpenAnalysis) {\r\n      await this.analyze()\r\n      const wrapper = document.querySelector('#app-wrapper')\r\n      wrapper && wrapper.scroll(0, 9999)\r\n    }\r\n  }\r\n\r\n  private favourite = async () => {\r\n    await favouritesService.addFavourite({\r\n      sub_id: 'hai_test',\r\n      image_id: this.state.images[0].id\r\n    })\r\n    this.setState({isOpenMsg: true, msg: 'Add to favourite'})\r\n  }\r\n\r\n  private analyze = async () => {\r\n    const {images} = this.state\r\n    if (images.length === 0) {\r\n      return\r\n    }\r\n    const imageAnalysis = await imagesService.analyzeImage(this.state.images[0].id)\r\n    this.setState({imageAnalysis})\r\n  }\r\n\r\n  public render() {\r\n    const {images, imageInput, isOpenMsg, msg, isOpenAnalysis, imageAnalysis} = this.state\r\n    return (\r\n      <Wrapper id=\"home-wrapper\">\r\n        {\r\n          images.length > 0 &&\r\n          <div key={images[0].id}>\r\n              <Header/>\r\n              <ImageWrapper>\r\n                  <Image src={images[0].url} alt=\"Animal Image\"/>\r\n              </ImageWrapper>\r\n              <ActionDiv>\r\n                  <VoteButton color=\"primary\" onClick={this.vote}> <Icon fontSize=\"large\">thumb_up</Icon> </VoteButton>\r\n                  <input onChange={this.onChangeImage} accept=\"image/*\" style={{display: 'none'}} id=\"new-file\"\r\n                         type=\"file\" ref={imageInput}/>\r\n                  <label htmlFor=\"new-file\">\r\n                      <UploadButton component=\"span\"><Icon>cloud_upload</Icon></UploadButton>\r\n                  </label>\r\n                  <FavouriteButton onClick={this.favourite}> <Icon fontSize=\"large\">star</Icon> </FavouriteButton>\r\n                  <AnalyzeButton onClick={this.toggleAnalysisCollapse}><Icon>show_chart</Icon></AnalyzeButton>\r\n                  <NextButton color=\"secondary\" onClick={this.updateImage}> <Icon\r\n                      fontSize=\"large\">arrow_forward_ios</Icon> </NextButton>\r\n              </ActionDiv>\r\n            {\r\n              isOpenAnalysis && images.length > 0 && imageAnalysis.length > 0 &&\r\n              <Analysis imageAnalysis={imageAnalysis[0]}/>\r\n            }\r\n              <Snackbar open={isOpenMsg} TransitionComponent={TransitionUp} onClose={this.onCloseMsg} message={msg}/>\r\n          </div>\r\n        }\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n  axios: state.axios,\r\n  breeds: state.breeds,\r\n  categories: state.categories\r\n})\r\nconst mapDispatchToProps: IHomeActionProps = {}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n`\r\nexport const TypeSettingSection = styled.section`\r\n padding: 8px 16px;\r\n`\r\n","import * as React from 'react'\r\n// Redux\r\nimport {ISettingActionProps, ISettingProps, ISettingState} from \"./index\"\r\nimport {updateSettingType} from \"../../store/setting/actions\"\r\nimport { updateAxios } from \"../../store/axios/actions\"\r\n// Material UI\r\nimport Radio from \"@material-ui/core/Radio\"\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\n// Custom components\r\nimport Header from '../../components/Header/Header'\r\nimport {IStore} from \"../../store\"\r\nimport {connect} from \"react-redux\"\r\n// Styles\r\nimport {Wrapper, TypeSettingSection} from \"./styles\"\r\n\r\nclass Setting extends React.Component<ISettingProps, ISettingState> {\r\n  constructor(props: ISettingProps) {\r\n    super(props)\r\n  }\r\n\r\n  private onChangeType = (event: React.ChangeEvent<any>) => {\r\n    this.setState({ selectedType: event.target.value })\r\n    this.props.updateSettingType(event.target.value)\r\n    this.props.updateAxios(event.target.value)\r\n  }\r\n\r\n  public render() {\r\n    const {setting} = this.props\r\n    return (\r\n      <Wrapper>\r\n        <Header/>\r\n        <TypeSettingSection>\r\n          <h3>Which one would you prefer?</h3>\r\n          <FormControl fullWidth={true}>\r\n            <RadioGroup value={setting.type} onChange={this.onChangeType}>\r\n              <FormControlLabel value=\"CAT\" control={<Radio/>} label=\"CAT\"/>\r\n              <FormControlLabel value=\"DOG\" control={<Radio/>} label=\"DOG\"/>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </TypeSettingSection>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n  setting: state.setting\r\n})\r\n\r\nconst mapDispatchToProps: ISettingActionProps = {\r\n  updateAxios,\r\n  updateSettingType\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Setting)\r\n","import {UPDATE_SETTING_TYPE} from \"../actionTypes\"\r\nimport {IUpdateSettingTypeAction} from \"./index\"\r\n\r\nexport const updateSettingType = (payload: 'CAT' | 'DOG'): IUpdateSettingTypeAction => {\r\n  return {\r\n    type: UPDATE_SETTING_TYPE,\r\n    payload\r\n  }\r\n}\r\n","import * as React from 'react'\r\n// Types\r\nimport {IVotesProps, IVotesState} from \"./index\"\r\nimport {IVotesElement} from \"../../env\"\r\n// Material UI\r\nimport GridList from '@material-ui/core/GridList'\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\n// Services\r\nimport votesService from '../../services/votes'\r\nimport imagesService from '../../services/images'\r\n// Custom components\r\nimport Header from '../../components/Header/Header'\r\n\r\nclass Votes extends React.Component<IVotesProps, IVotesState> {\r\n  constructor(props: IVotesProps) {\r\n    super(props)\r\n    this.state = {\r\n      imagesWithVote: [],\r\n      isOpenDialog: false,\r\n      deletingVoteId: ''\r\n    }\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    const votes: Array<IVotesElement> = await votesService.getVotes({sub_id: 'hai_test'})\r\n    let imagesWithVote = []\r\n\r\n    for (let i = 0; i < votes.length; i++) {\r\n      const image = await imagesService.getImageById(votes[i].image_id)\r\n      const imageWithVote = {...image, vote: votes[i]}\r\n      imagesWithVote.push(imageWithVote)\r\n    }\r\n    this.setState({imagesWithVote})\r\n  }\r\n\r\n  private formatDate = (dateStr: string): string => {\r\n    const date = new Date(dateStr)\r\n    return `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()-2000}`\r\n  }\r\n\r\n  private deleteVote = async () => {\r\n    const {deletingVoteId} = this.state\r\n    // Remove locally\r\n    const newImagesWithVote = this.state.imagesWithVote.filter(image => image.vote.id !== deletingVoteId)\r\n    this.setState({imagesWithVote: newImagesWithVote})\r\n    this.closeDialog()\r\n    // Send request to remove\r\n    await votesService.deleteVote(deletingVoteId)\r\n  }\r\n\r\n  private closeDialog = () => {\r\n    this.setState({isOpenDialog: false})\r\n  }\r\n  private openDialog = () => {\r\n    this.setState({isOpenDialog: true})\r\n  }\r\n  private deletingVote = (voteId: string) => {\r\n    this.openDialog()\r\n    this.setState({deletingVoteId: voteId})\r\n  }\r\n\r\n  public render() {\r\n    const {imagesWithVote, isOpenDialog} = this.state\r\n    return (\r\n      <div>\r\n        <Header/>\r\n\r\n        <h3 style={{textAlign: 'center', marginBottom: 12}}>Voted Images</h3>\r\n        <GridList cellHeight={180}>\r\n          {\r\n            imagesWithVote.map(image => (\r\n              <GridListTile key={image.id}>\r\n                <img src={image.url} alt={image.id}/>\r\n                <GridListTileBar title=\"\" subtitle={this.formatDate(image.vote.created_at)}\r\n                  actionIcon={\r\n                    <IconButton onClick={() => this.deletingVote(image.vote.id)}>\r\n                      <Icon color=\"secondary\">close</Icon>\r\n                    </IconButton>\r\n                  }/>\r\n              </GridListTile>\r\n            ))\r\n          }\r\n        </GridList>\r\n\r\n        <Dialog open={isOpenDialog} onClose={this.closeDialog}>\r\n          <DialogTitle>Sure to delete it?</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.deleteVote} color=\"primary\">\r\n              Delete\r\n            </Button>\r\n            <Button onClick={this.closeDialog} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Votes\r\n","import * as React from 'react'\r\n// Types\r\nimport {IFavouritesProps, IFavouritesState} from \"./index\"\r\nimport {IFavouritesElement} from \"../../env\"\r\n// Material UI\r\nimport GridList from '@material-ui/core/GridList'\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\n// Services\r\nimport favouritesService from '../../services/faviourites'\r\nimport imagesService from '../../services/images'\r\n// Custom components\r\nimport Header from '../../components/Header/Header'\r\n\r\nclass Favourites extends React.Component<IFavouritesProps, IFavouritesState> {\r\n  constructor(props: IFavouritesProps) {\r\n    super(props)\r\n    this.state = {\r\n      imagesWithFavourite: [],\r\n      isOpenDialog: false,\r\n      deletingFavouriteId: ''\r\n    }\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    const favourites: Array<IFavouritesElement> = await favouritesService.getFavourites({sub_id: 'hai_test'})\r\n    let imagesWithFavourite = []\r\n\r\n    for (let i = 0; i < favourites.length; i++) {\r\n      const image = await imagesService.getImageById(favourites[i].image_id)\r\n      const imageWithFavourite = {...image, favourite: favourites[i]}\r\n      imagesWithFavourite.push(imageWithFavourite)\r\n    }\r\n    this.setState({imagesWithFavourite})\r\n  }\r\n\r\n  private formatDate = (dateStr: string): string => {\r\n    const date = new Date(dateStr)\r\n    return `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()-2000}`\r\n  }\r\n\r\n  private deleteFavourite = async () => {\r\n    const {deletingFavouriteId} = this.state\r\n    // Remove locally\r\n    const newImagesWithFavourite = this.state.imagesWithFavourite.filter(image => image.favourite.id !== deletingFavouriteId)\r\n    this.setState({imagesWithFavourite: newImagesWithFavourite})\r\n    this.closeDialog()\r\n    // Send request to remove\r\n    await favouritesService.deleteFavourite(deletingFavouriteId)\r\n  }\r\n\r\n  private closeDialog = () => {\r\n    this.setState({isOpenDialog: false})\r\n  }\r\n  private openDialog = () => {\r\n    this.setState({isOpenDialog: true})\r\n  }\r\n  private deletingFavourite = (favouriteId: string) => {\r\n    this.openDialog()\r\n    this.setState({deletingFavouriteId: favouriteId})\r\n  }\r\n\r\n  public render() {\r\n    const {imagesWithFavourite, isOpenDialog} = this.state\r\n    return (\r\n      <div>\r\n        <Header/>\r\n\r\n        <h3 style={{textAlign: 'center', marginBottom: 12}}>Your Favourite Images</h3>\r\n        <GridList cellHeight={180}>\r\n          {\r\n            imagesWithFavourite.map(image => (\r\n              <GridListTile key={image.id}>\r\n                <img src={image.url} alt={image.id}/>\r\n                <GridListTileBar title=\"\" subtitle={this.formatDate(image.favourite.created_at)}\r\n                                 actionIcon={\r\n                                   <IconButton onClick={() => this.deletingFavourite(image.favourite.id)}>\r\n                                     <Icon color=\"secondary\">close</Icon>\r\n                                   </IconButton>\r\n                                 }/>\r\n              </GridListTile>\r\n            ))\r\n          }\r\n        </GridList>\r\n\r\n        <Dialog open={isOpenDialog} onClose={this.closeDialog}>\r\n          <DialogTitle>Sure to delete it?</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.deleteFavourite} color=\"primary\">\r\n              Delete\r\n            </Button>\r\n            <Button onClick={this.closeDialog} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Favourites\r\n","import store from \"../store/store\"\r\nimport {IGetBreedsParams} from \"./index\"\r\nimport {AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getBreeds: (params?: IGetBreedsParams) => {\r\n    return axios\r\n      .get(`/breeds`, {\r\n        params\r\n      })\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getBreedById: (breedId: string) => {\r\n    return axios\r\n      .get(`/breeds/${breedId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import store from \"../store/store\"\r\nimport {AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getCategories: () => {\r\n    return axios\r\n      .get(`/categories`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import React, {Component} from 'react';\nimport {HashRouter as Router, Route} from \"react-router-dom\"\n// Redux\nimport {IStore} from \"./store\"\nimport {updateAxios} from \"./store/axios/actions\"\nimport {initBreeds} from \"./store/breeds/actions\"\nimport {initCategories} from \"./store/categories/actions\"\n// Material UI\nimport Card from '@material-ui/core/Card'\n// Pages\nimport Home from './pages/Home/Home'\nimport Setting from './pages/Setting/Setting'\nimport Votes from './pages/Votes/Votes'\nimport Favourites from './pages/Favourites/Favourties'\n// App Styles\nimport './App.scss'\nimport {connect} from \"react-redux\"\nimport {IAppActionProps, IAppProps, IBreed, ICategory} from \"./env\"\n// Services\nimport breedsService from './services/breeds'\nimport categoriesService from './services/categories'\n\nclass App extends Component<IAppProps> {\n  constructor(props: IAppProps) {\n    super(props)\n  }\n\n  public async componentDidMount() {\n    // Init animal type\n    this.props.updateAxios('CAT')\n    // Init animal categories\n    const categories: Array<ICategory> = await categoriesService.getCategories()\n    this.props.initCategories(categories)\n    // Init a breed list\n    const breeds: Array<IBreed> = await breedsService.getBreeds()\n    this.props.initBreeds(breeds)\n  }\n\n  public render() {\n    return (\n      <Router>\n        <Card id=\"app-wrapper\" className=\"app-wrapper\">\n          <Route path=\"/\" exact={true} component={Home}/>\n          <Route path=\"/setting\" component={Setting}/>\n          <Route path=\"/votes\" component={Votes}/>\n          <Route path=\"/favourites\" component={Favourites}/>\n        </Card>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IStore) => ({})\nconst mapDispatchToProps: IAppActionProps = {\n  initBreeds,\n  initCategories,\n  updateAxios\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {INIT_BREEDS} from \"../actionTypes\"\r\nimport {IBreedsAction} from \"./index\"\r\nimport {IBreed} from \"../../env\"\r\n\r\nexport const initBreeds = (payload: Array<IBreed>): IBreedsAction => {\r\n  return {\r\n    type: INIT_BREEDS,\r\n    payload\r\n  }\r\n}\r\n","import {INIT_CATEGORIES} from \"../actionTypes\"\r\nimport {ICategoriesAction} from \"./index\"\r\nimport {ICategory} from \"../../env\"\r\n\r\nexport const initCategories = (payload: Array<ICategory>): ICategoriesAction => {\r\n  return {\r\n    type: INIT_CATEGORIES,\r\n    payload\r\n  }\r\n}\r\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// Redux\nimport {Provider} from \"react-redux\"\nimport store from './store/store'\n// utils\nimport * as serviceWorker from './serviceWorker';\n// Root component\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}