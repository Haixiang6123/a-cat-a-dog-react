{"version":3,"sources":["axios/index.ts","axios/secret.ts","store/axios/reducer.ts","store/actionTypes.ts","store/reducers.ts","store/store.ts","serviceWorker.ts","services/images.ts","pages/Home/styles.ts","pages/Home/Home.tsx","store/axios/actions.ts","pages/Setting/Setting.tsx","pages/Vote/Vote.tsx","pages/Favourite/Favourtie.tsx","App.tsx","index.tsx"],"names":["catAxios","axios","create","baseURL","headers","x-api-key","dogAxios","mapper","CAT","DOG","reducer","state","arguments","length","undefined","action","type","payload","combineReducers","store","createStore","reducers","Boolean","window","location","hostname","match","getState","subscribe","services_images","params","get","then","response","data","Wrapper","styled","div","_templateObject","Header","header","_templateObject2","UserButton","IconButton","_templateObject3","SettingButton","_templateObject4","ImageWrapper","_templateObject5","Image","img","_templateObject6","ActionDiv","_templateObject7","NextButton","Fab","_templateObject8","LoveButton","_templateObject9","StarButton","_templateObject10","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","images","updateAxios","imagesService","resources","setState","react","map","image","key","id","Icon_default","a","src","url","alt","color","React","mapDispatchToProps","connect","Setting","Vote","Favourtie","App","react_default","createElement","react_router_dom","Card_default","className","react_router","path","exact","component","Favourite","Component","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebfbab40.chunk.js","sourcesContent":["import axios, {AxiosInstance} from 'axios';\r\nimport { catKey, dogKey } from \"./secret\"\r\n\r\nconst catAxios: AxiosInstance = axios.create({\r\n  baseURL: 'https://api.thecatapi.com/v1',\r\n  headers: {\r\n    'x-api-key': catKey\r\n  }\r\n});\r\nconst dogAxios: AxiosInstance = axios.create({\r\n  baseURL: 'https://api.thedogapi.com/v1',\r\n  headers: {\r\n    'x-api-key': dogKey\r\n  }\r\n});\r\n\r\nexport {\r\n  catAxios,\r\n  dogAxios\r\n}\r\n","export const catKey = '416848bd-ea2f-4d38-a329-0e858ab5cd38'\r\nexport const dogKey = '89e98203-1b5b-4c32-a67b-e314bf19f4c5'\r\n","import {UPDATE_AXIOS} from \"../actionTypes\";\r\nimport {AxiosInstance} from \"axios\"\r\nimport {catAxios, dogAxios} from \"../../axios\"\r\nimport {IAxiosAction, IAxiosMapper} from \"./index\"\r\n\r\nconst mapper: IAxiosMapper = {\r\n  CAT: catAxios,\r\n  DOG: dogAxios\r\n}\r\n\r\nconst reducer = (state: AxiosInstance=catAxios, action: IAxiosAction<string>) => {\r\n  switch (action.type) {\r\n    case UPDATE_AXIOS:\r\n      return mapper[action.payload]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","export const UPDATE_AXIOS: string = 'UPDATE_AXIOS'\r\n","import axios from './axios/reducer'\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default combineReducers({\r\n  axios: axios\r\n})\r\n","import { createStore } from \"redux\";\r\nimport reducers from './reducers'\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import store from \"../store/store\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getImages: (params?: IGetImagesParams) => {\r\n    return axios\r\n      .get(`/images/search`, {params})\r\n      .then((response: any) => response.data)\r\n  },\r\n  getImageById: (imageId: string, params: IGetImageByIdParams) => {\r\n    return axios\r\n      .get(`/images/${imageId}`, {params})\r\n      .then((response: any) => response.data)\r\n  },\r\n  getUploadedImages: (params: IGetUploadedImagesParams) => {\r\n    return axios\r\n      .get(`/images`, {params})\r\n      .then((response: any) => response.data)\r\n  },\r\n  uploadImage: (data: IUploadImageData) => {\r\n    return axios\r\n      .post(`/images/upload`, data)\r\n      .then((response: any) => response.data)\r\n  },\r\n  deleteImage: (imageId: string) => {\r\n    return axios\r\n      .delete(`/images/${imageId}`)\r\n      .then((response: any) => response.data)\r\n  },\r\n  analyzeImage: (imageId: string) => {\r\n    return axios\r\n      .get(`/images/${imageId}/analysis`)\r\n      .then((response: any) => response.data)\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Fab from '@material-ui/core/Fab'\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n`\r\n\r\nexport const Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n  color: #20232a;\r\n  font-size: 1.2em;\r\n`\r\nexport const UserButton = styled(IconButton)`\r\n\r\n`\r\nexport const SettingButton = styled(IconButton)`\r\n`\r\nexport const ImageWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 520px;\r\n  overflow: hidden;\r\n  border-radius: 12px;\r\n`\r\nexport const Image = styled.img`\r\n  min-height: 100%;\r\n  vertical-align: top;\r\n  border-radius: 8px;\r\n`\r\nexport const ActionDiv = styled.div`\r\n  display: flex;\r\n  margin-top: 16px;\r\n  justify-content: space-around;\r\n`\r\nexport const NextButton = styled(Fab)` \r\n`\r\nexport const LoveButton = styled(Fab)`\r\n  background: #20232a !important;\r\n  color: #61dafb !important;\r\n`\r\nexport const StarButton = styled(Fab)` \r\n  background: #fadb14 !important;\r\n  color: white !important;\r\n`\r\n","import * as React from 'react'\r\n// Material\r\nimport Icon from '@material-ui/core/Icon'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n// Redux\r\nimport {IAxiosStore} from \"../../store\"\r\nimport {updateAxios} from \"../../store/axios/actions\"\r\nimport {connect} from \"react-redux\"\r\n// Services\r\nimport imagesService from '../../services/images'\r\n// Types\r\nimport {IHomeActionProps, IHomeProps, IHomeState, IHomeStoreProps} from \"./index\"\r\n// Styles\r\nimport {\r\n  Wrapper,\r\n  Header, UserButton, SettingButton,\r\n  ImageWrapper, Image,\r\n  ActionDiv, LoveButton, NextButton, StarButton\r\n} from \"./styles\"\r\n\r\nclass Home extends React.Component<IHomeProps, IHomeState> {\r\n  constructor(props: IHomeProps) {\r\n    super(props);\r\n    this.state = {\r\n      images: []\r\n    }\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    await this.props.updateAxios('CAT')\r\n\r\n    const resources = await imagesService.getImages()\r\n    this.setState({\r\n      images: resources\r\n    })\r\n  }\r\n\r\n  public render() {\r\n    const {images} = this.state\r\n    return (\r\n      <Wrapper>\r\n        {\r\n          images.map(image =>\r\n            <div key={image.id}>\r\n              <Header>\r\n                <UserButton >\r\n                  <Icon>person</Icon>\r\n                </UserButton>\r\n                <span>🐱A🐶</span>\r\n                <SettingButton >\r\n                  <Icon>settings</Icon>\r\n                </SettingButton>\r\n              </Header>\r\n              <ImageWrapper>\r\n                <Image src={image.url} alt=\"Animal Image\"/>\r\n              </ImageWrapper>\r\n              <ActionDiv>\r\n                <LoveButton color=\"secondary\">\r\n                  <Icon>thumb_up</Icon>\r\n                </LoveButton>\r\n                <StarButton color=\"default\">\r\n                  <Icon>star</Icon>\r\n                </StarButton>\r\n                <NextButton color=\"secondary\">\r\n                  <Icon>close</Icon>\r\n                </NextButton>\r\n              </ActionDiv>\r\n            </div>\r\n          )\r\n        }\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IAxiosStore): IHomeStoreProps => ({\r\n  axios: state.axios\r\n})\r\nconst mapDispatchToProps: IHomeActionProps = {\r\n  updateAxios\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","import {UPDATE_AXIOS} from \"../actionTypes\"\r\nimport {IAxiosAction} from \"./index\"\r\n\r\nexport const updateAxios = (payload: 'CAT'|'DOG'): IAxiosAction<string> => {\r\n  return {\r\n    type: UPDATE_AXIOS,\r\n    payload\r\n  }\r\n}\r\n","import * as React from 'react'\r\n\r\nclass Setting extends React.Component {\r\n  public render() {\r\n    return (\r\n      <div>\r\n        Setting Page\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Setting\r\n","import * as React from 'react'\r\n\r\nclass Vote extends React.Component {\r\n  public render() {\r\n    return (\r\n      <div>\r\n        Vote Page\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Vote\r\n","import * as React from 'react'\r\n\r\nclass Favourtie extends React.Component{\r\n  public render() {\r\n    return (\r\n      <div>\r\n        Favourite Page\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Favourtie\r\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\n// Material UI\nimport Card from '@material-ui/core/Card'\n// Pages\nimport Home from './pages/Home/Home'\nimport Setting from './pages/Setting/Setting'\nimport Vote from './pages/Vote/Vote'\nimport Favourite from './pages/Favourite/Favourtie'\n// App Styles\nimport './App.scss'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Card className=\"app-wrapper\">\n          <Route path=\"/\" exact={true} component={Home}/>\n          <Route path=\"/setting\" component={Setting}/>\n          <Route path=\"/vote\" component={Vote}/>\n          <Route path=\"/favourite\" component={Favourite}/>\n        </Card>\n      </Router>\n    );\n  }\n}\n\n\nexport default App;\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// Redux\nimport {Provider} from \"react-redux\"\nimport store from './store/store'\n// utils\nimport * as serviceWorker from './serviceWorker';\n// Root component\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}