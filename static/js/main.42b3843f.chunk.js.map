{"version":3,"sources":["axios/index.ts","axios/secret.ts","store/axios/reducer.ts","store/actionTypes.ts","store/user/reducer.ts","store/reducers.ts","store/store.ts","serviceWorker.ts","store/axios/actions.ts","store/user/actions.ts","services/images.ts","services/votes.ts","services/faviourites.ts","pages/Home/styles.ts","components/TransitionUp/TransitionUp.tsx","components/Header/styles.tsx","components/Header/Header.tsx","components/Analysis/echartsHelpers.ts","components/Analysis/Analysis.tsx","pages/Home/Home.tsx","pages/Setting/styles.ts","pages/Setting/Setting.tsx","pages/Votes/Votes.tsx","pages/Favourites/Favourties.tsx","pages/Register/styles.ts","pages/Register/Register.tsx","components/PrivateRoute/PrivateRoute.jsx","App.tsx","index.tsx"],"names":["catAxios","axios","create","baseURL","headers","x-api-key","dogAxios","mapper","CAT","DOG","reducer","state","arguments","length","undefined","action","type","payload","initState","subId","combineReducers","user","store","createStore","reducers","Boolean","window","location","hostname","match","updateAxios","updateUser","getState","subscribe","services_images","getImages","params","get","then","response","data","getImageById","imageId","concat","getUploadedImages","uploadImage","post","Content-Type","catch","error","deleteImage","delete","analyzeImage","services_votes","getVotes","getVoteById","voteId","addVote","deleteVote","faviourites","getFavourites","getFavouriteById","favouriteId","addFavourite","deleteFavourite","Wrapper","styled","div","_templateObject","ImageWrapper","_templateObject2","Image","img","_templateObject3","ActionDiv","_templateObject4","VoteButton","IconButton","_templateObject5","UploadButton","_templateObject6","FavouriteButton","_templateObject7","AnalyzeButton","_templateObject8","NextButton","_templateObject9","TransitionUp","props","react","index_es","Object","assign","direction","header","styles_templateObject","UserButton","styles_templateObject2","UserName","Typography","styles_templateObject3","SettingButton","styles_templateObject4","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleUser","event","setState","userEl","currentTarget","isOpenUser","toggleSetting","settingEl","isOpenSetting","_this2","_this$state","_this$props","history","styles_Wrapper","onClick","Icon_default","a","react_router_dom","to","Button_default","Popper_default","open","anchorEl","transition","disablePortal","_ref","TransitionProps","placement","Grow_default","style","transformOrigin","Paper_default","ClickAwayListener_default","onClickAway","MenuList_default","MenuItem_default","push","_ref2","Fade_default","timeout","React","connect","withRouter","getOptions","imageAnalysis","labels","map","label","value","Number","Confidence","toFixed","name","Name","title","text","subtext","image_id","x","tooltip","trigger","formatter","series","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","Analysis","formatDate","dateStr","date","Date","getMonth","getDate","getFullYear","drawPie","pieEl","document","querySelector","myChart","echarts","init","options","setOption","id","height","marginBottom","vendor","created_at","Home","vote","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","votesService","sub_id","images","isOpenMsg","msg","stop","onChangeImage","_callee2","imageInput","_context2","current","files","abrupt","FormData","append","imagesService","sent","status","toString","startsWith","message","onCloseMsg","_callee3","_context3","updateImage","_callee4","_context4","toggleAnalysisCollapse","_callee5","wrapper","_context5","isOpenAnalysis","analyze","scroll","favourite","_callee6","_context6","favouritesService","_callee7","_context7","key","components_Header_Header","src","url","alt","color","fontSize","onChange","accept","display","ref","htmlFor","component","components_Analysis_Analysis","TransitionComponent","onClose","Setting_styles_templateObject","TypeSettingSection","section","Setting_styles_templateObject2","Setting","onChangeType","objectSpread","target","Setting_styles_Wrapper","FormControl_default","fullWidth","RadioGroup_default","FormControlLabel_default","control","Radio_default","mapDispatchToProps","Votes","deletingVoteId","newImagesWithVote","imagesWithVote","filter","image","closeDialog","isOpenDialog","openDialog","deletingVote","votes","i","imageWithVote","textAlign","GridList_default","cellHeight","GridListTile_default","GridListTileBar_default","subtitle","actionIcon","IconButton_default","Dialog_default","DialogTitle_default","DialogActions_default","Favourites","deletingFavouriteId","newImagesWithFavourite","imagesWithFavourite","deletingFavourite","favourites","imageWithFavourite","Register_styles_templateObject","Avatar","Register_styles_templateObject2","LoginButton","Button","Register_styles_templateObject3","Register","onChangeSubId","register","localStorage","setItem","JSON","stringify","isError","_this$state2","Register_styles_Wrapper","TextField_default","margin","variant","isLogin","userStr","getItem","parse","PrivateRoute","Component","restProps","objectWithoutProperties","react_router","render","pathname","from","App","react_default","createElement","Card_default","className","path","exact","ReactDOM","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42b3843f.chunk.js","sourcesContent":["import axios, {AxiosInstance} from 'axios';\r\nimport { catKey, dogKey } from \"./secret\"\r\n\r\nconst catAxios: AxiosInstance = axios.create({\r\n  baseURL: 'https://api.thecatapi.com/v1',\r\n  headers: {\r\n    'x-api-key': catKey\r\n  }\r\n});\r\nconst dogAxios: AxiosInstance = axios.create({\r\n  baseURL: 'https://api.thedogapi.com/v1',\r\n  headers: {\r\n    'x-api-key': dogKey\r\n  }\r\n});\r\n\r\nexport {\r\n  catAxios,\r\n  dogAxios\r\n}\r\n","export const catKey = '416848bd-ea2f-4d38-a329-0e858ab5cd38'\r\nexport const dogKey = '89e98203-1b5b-4c32-a67b-e314bf19f4c5'\r\n","import {UPDATE_AXIOS} from \"../actionTypes\";\r\nimport {AxiosInstance} from \"axios\"\r\nimport {catAxios, dogAxios} from \"../../axios\"\r\nimport {IAxiosAction, IAxiosMapper} from \"./index\"\r\n\r\nconst mapper: IAxiosMapper = {\r\n  CAT: catAxios,\r\n  DOG: dogAxios\r\n}\r\n\r\nconst reducer = (state: AxiosInstance=catAxios, action: IAxiosAction) => {\r\n  switch (action.type) {\r\n    case UPDATE_AXIOS:\r\n      return mapper[action.payload]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","// axios\r\nexport const UPDATE_AXIOS: string = 'UPDATE_AXIOS'\r\n// breeds\r\nexport const INIT_BREEDS: string = 'INIT_BREEDS'\r\n// categories\r\nexport const INIT_CATEGORIES: string = 'INIT_CATEGORIES'\r\n// setting\r\nexport const UPDATE_SETTING_TYPE: string = 'UPDATE_SETTING_TYPE'\r\n// user\r\nexport const UPDATE_USER: string = 'UPDATE_USER'\r\n","import {UPDATE_USER} from \"../actionTypes\";\r\nimport {IUpdateUserAction, IUserStore, UserAction} from \"./index\"\r\n\r\nlet initState: IUserStore = {\r\n  subId: '',\r\n  type: 'CAT'\r\n}\r\n\r\nconst reducer = (state = initState, action: UserAction) => {\r\n  switch (action.type) {\r\n    case UPDATE_USER:\r\n      return (<IUpdateUserAction>action).payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import axios from './axios/reducer'\r\nimport user from './user/reducer'\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default combineReducers({\r\n  axios,\r\n  user\r\n})\r\n","import { createStore } from \"redux\";\r\nimport reducers from './reducers'\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {UPDATE_AXIOS} from \"../actionTypes\"\r\nimport {IAxiosAction} from \"./index\"\r\n\r\nexport const updateAxios = (payload: 'CAT'|'DOG'): IAxiosAction => {\r\n  return {\r\n    type: UPDATE_AXIOS,\r\n    payload\r\n  }\r\n}\r\n","import {UPDATE_USER} from \"../actionTypes\"\r\nimport {IUpdateUserAction, IUpdateUserPayload} from \"./index\"\r\n\r\nexport const updateUser = (payload: IUpdateUserPayload): IUpdateUserAction => {\r\n  return {\r\n    type: UPDATE_USER,\r\n    payload\r\n  }\r\n}\r\n","import store from \"../store/store\"\r\nimport {IGetImagesParams, IGetUploadedImagesParams} from \"./index\"\r\nimport {AxiosError, AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getImages: (params?: IGetImagesParams) => {\r\n    return axios\r\n      .get(`/images/search`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getImageById: (imageId: string) => {\r\n    return axios\r\n      .get(`/images/${imageId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getUploadedImages: (params: IGetUploadedImagesParams) => {\r\n    return axios\r\n      .get(`/images`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  uploadImage: (data: FormData) => {\r\n    return axios\r\n      .post(`/images/upload`, data, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      })\r\n      .then((response: AxiosResponse) => response)\r\n      .catch((error: AxiosError) => error.response)\r\n  },\r\n  deleteImage: (imageId: string) => {\r\n    return axios\r\n      .delete(`/images/${imageId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  analyzeImage: (imageId: string) => {\r\n    return axios\r\n      .get(`/images/${imageId}/analysis`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import store from \"../store/store\"\r\nimport {\r\n  IAddVoteData,\r\n  IGetVotesParams,\r\n} from \"./index\"\r\nimport {AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getVotes: (params: IGetVotesParams) => {\r\n    return axios\r\n      .get(`/votes`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getVoteById: (voteId: string) => {\r\n    return axios\r\n      .get(`/votes/${voteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  addVote: (data: IAddVoteData) => {\r\n    return axios\r\n      .post(`/votes`, data)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  deleteVote: (voteId: string) => {\r\n    return axios\r\n      .delete(`/votes/${voteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import store from \"../store/store\"\r\nimport {\r\n  IAddFavouriteData,\r\n  IGetFavouritesParams\r\n} from \"./index\"\r\nimport {AxiosResponse} from \"axios\"\r\n\r\nlet axios = store.getState().axios\r\n\r\nstore.subscribe(() => {\r\n  axios = store.getState().axios\r\n})\r\n\r\nexport default {\r\n  getFavourites: (params: IGetFavouritesParams) => {\r\n    return axios\r\n      .get(`/favourites`, {params})\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  getFavouriteById: (favouriteId: string) => {\r\n    return axios\r\n      .get(`/favourites/${favouriteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  addFavourite: (data: IAddFavouriteData) => {\r\n    return axios\r\n      .post(`/favourites`, data)\r\n      .then((response: AxiosResponse) => response.data)\r\n  },\r\n  deleteFavourite: (favouriteId: string) => {\r\n    return axios\r\n      .delete(`/favourites/${favouriteId}`)\r\n      .then((response: AxiosResponse) => response.data)\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n`\r\n\r\nexport const ImageWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 510px;\r\n  overflow: hidden;\r\n  border-radius: 12px;\r\n`\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  vertical-align: top;\r\n  border-radius: 8px;\r\n`\r\nexport const ActionDiv = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  border-top: 1px solid #ddd;\r\n`\r\nexport const VoteButton = styled(IconButton)`\r\n`\r\nexport const UploadButton = styled(IconButton)`\r\n  color: #61dafb !important;\r\n`\r\nexport const FavouriteButton = styled(IconButton)` \r\n  color: #fadb14 !important;\r\n`\r\nexport const AnalyzeButton = styled(IconButton)`\r\n  color: #20232a !important;\r\n`\r\nexport const NextButton = styled(IconButton)` \r\n`\r\n","import * as React from 'react'\r\nimport {Slide} from \"@material-ui/core\"\r\n\r\nconst TransitionUp: React.FunctionComponent = (props) => {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nexport default TransitionUp\r\n","import styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nexport const Wrapper = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n  color: #20232a;\r\n  font-size: 1.2em;\r\n  a {\r\n    color: inherit;\r\n  }\r\n`\r\nexport const UserButton = styled(IconButton)`\r\n\r\n`\r\nexport const UserName = styled(Typography)`\r\n  padding: 8px;\r\n`\r\nexport const SettingButton = styled(IconButton)`\r\n`\r\n","import * as React from 'react'\r\n// Router\r\nimport {withRouter} from \"react-router-dom\"\r\n// Redux\r\nimport {connect} from \"react-redux\"\r\n// Material UI\r\nimport Icon from '@material-ui/core/Icon'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Grow from \"@material-ui/core/Grow\"\r\nimport Popper from \"@material-ui/core/Popper\"\r\nimport Fade from \"@material-ui/core/Fade\"\r\nimport MenuList from '@material-ui/core/MenuList'\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n// Styles\r\nimport {Wrapper, UserButton, UserName, SettingButton} from \"./styles\"\r\n// Types\r\nimport {IHeaderProps, IHeaderState} from \"./index\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {IStore} from \"../../store\"\r\n\r\nclass Header extends React.Component<IHeaderProps, IHeaderState> {\r\n  constructor(props: IHeaderProps) {\r\n    super(props)\r\n    this.state = {\r\n      isOpenUser: false,\r\n      userEl: null,\r\n      isOpenSetting: false,\r\n      settingEl: null\r\n    }\r\n  }\r\n\r\n  private toggleUser = (event: any) => {\r\n    this.setState({\r\n      userEl: event.currentTarget,\r\n      isOpenUser: !this.state.isOpenUser,\r\n    });\r\n  }\r\n\r\n  private toggleSetting = (event: any) => {\r\n    this.setState({\r\n      settingEl: event.currentTarget,\r\n      isOpenSetting: !this.state.isOpenSetting,\r\n    })\r\n  }\r\n\r\n  public render() {\r\n    const {isOpenUser, userEl, isOpenSetting, settingEl} = this.state\r\n    const {history, user} = this.props\r\n    return (\r\n      <Wrapper>\r\n        <UserButton onClick={this.toggleUser}> <Icon>person</Icon> </UserButton>\r\n        <Link to=\"/\"><Button>🐱A🐶</Button></Link>\r\n        <SettingButton onClick={this.toggleSetting}><Icon>settings</Icon></SettingButton>\r\n\r\n        <Popper open={isOpenSetting} anchorEl={settingEl} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow {...TransitionProps} style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}>\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={this.toggleSetting}>\r\n                  <MenuList>\r\n                    <MenuItem onClick={() => history.push('/setting')}>General Setting</MenuItem>\r\n                    <MenuItem onClick={() => history.push('/votes')}>Voted Images</MenuItem>\r\n                    <MenuItem onClick={() => history.push('/favourites')}>Favourite Images</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n\r\n        <Popper placement=\"bottom-start\" open={isOpenUser} anchorEl={userEl} transition>\r\n          {({ TransitionProps }) => (\r\n            <Fade {...TransitionProps} timeout={350}>\r\n              <Paper>\r\n                <UserName>{user.subId}</UserName>\r\n              </Paper>\r\n            </Fade>\r\n          )}\r\n        </Popper>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n  user: state.user\r\n})\r\nconst mapDispatchToProps = {}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Header))\r\n","import {IImageAnalysis} from \"../../env\"\r\n\r\nexport const getOptions = (imageAnalysis: IImageAnalysis) => {\r\n  const data = imageAnalysis.labels\r\n    .map(label => ({\r\n      value: Number(label.Confidence.toFixed(2)),\r\n      name: label.Name\r\n    }))\r\n\r\n  return {\r\n    title: {\r\n      text: 'Image Analysis',\r\n      subtext: `ID: ${imageAnalysis.image_id}`,\r\n      x: 'center'\r\n    },\r\n    tooltip: {\r\n      trigger: 'item',\r\n      formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Confidence',\r\n        type: 'pie',\r\n        radius: '55%',\r\n        center: ['50%', '60%'],\r\n        data: data,\r\n        itemStyle: {\r\n          emphasis: {\r\n            shadowBlur: 10,\r\n            shadowOffsetX: 0,\r\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  };\r\n}\r\n","import * as React from 'react'\n// ECharts\nimport echarts from 'echarts'\n// Types\nimport {IAnalysisProps, IAnalysisState} from \"./index\"\n// Helpers\nimport {getOptions} from \"./echartsHelpers\"\n\nclass Analysis extends React.Component<IAnalysisProps, IAnalysisState> {\n  constructor(props: IAnalysisProps) {\n    super(props)\n  }\n\n  private formatDate = (dateStr: string): string => {\n    const date = new Date(dateStr)\n    return `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear() - 2000}`\n  }\n\n  public componentDidMount(): void {\n    this.drawPie()\n  }\n\n  private drawPie = () => {\n    const pieEl: HTMLCanvasElement | null = document.querySelector('#image-analysis-pie')\n    if (!pieEl) {\n      return\n    }\n    const myChart = echarts.init(pieEl);\n    const options: any = getOptions(this.props.imageAnalysis)\n    myChart.setOption(options);\n  }\n\n  public render() {\n    const {imageAnalysis} = this.props\n    return (\n      <div>\n        <div id=\"image-analysis-pie\" style={{height: 300}}/>\n        <p style={{marginBottom: 12}}><strong>Vendor: </strong>{imageAnalysis.vendor}</p>\n        <p><strong>Created At: </strong>{this.formatDate(imageAnalysis.created_at)}</p>\n      </div>\n    )\n  }\n}\n\nexport default Analysis\n","import * as React from 'react'\r\n// Material\r\nimport Icon from '@material-ui/core/Icon'\r\n// Redux\r\nimport {IStore} from \"../../store\"\r\nimport {connect} from \"react-redux\"\r\n// Material UI\r\nimport {Snackbar} from \"@material-ui/core\"\r\n// Services\r\nimport imagesService from '../../services/images'\r\nimport votesService from '../../services/votes'\r\nimport favouritesService from '../../services/faviourites'\r\n// Types\r\nimport {IHomeActionProps, IHomeProps, IHomeState} from \"./index\"\r\n// Styles\r\nimport {\r\n  ActionDiv,\r\n  AnalyzeButton,\r\n  FavouriteButton,\r\n  Image,\r\n  ImageWrapper,\r\n  NextButton,\r\n  UploadButton,\r\n  VoteButton,\r\n  Wrapper\r\n} from \"./styles\"\r\n// Types\r\nimport {IImage} from \"../../env\"\r\nimport {AxiosResponse} from \"axios\"\r\n// Custom components\r\nimport TransitionUp from \"../../components/TransitionUp/TransitionUp\"\r\nimport Header from '../../components/Header/Header'\r\nimport Analysis from \"../../components/Analysis/Analysis\"\r\n\r\nclass Home extends React.Component<IHomeProps, IHomeState> {\r\n  constructor(props: IHomeProps) {\r\n    super(props);\r\n    this.state = {\r\n      images: [],\r\n      imageInput: React.createRef(),\r\n      isOpenMsg: false,\r\n      msg: '',\r\n      isOpenAnalysis: false,\r\n      imageAnalysis: []\r\n    }\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    await this.updateImage()\r\n  }\r\n\r\n  private vote = async () => {\r\n    await votesService.addVote({\r\n      sub_id: this.props.user.subId,\r\n      image_id: this.state.images[0].id,\r\n      value: 1\r\n    })\r\n    this.setState({isOpenMsg: true, msg: 'Vote it'})\r\n  }\r\n\r\n  private onChangeImage = async () => {\r\n    const {imageInput} = this.state\r\n    if (!imageInput.current || !imageInput.current.files || imageInput.current.files.length === 0) {\r\n      return\r\n    }\r\n\r\n    const data = new FormData();\r\n    data.append('sub_id', this.props.user.subId);\r\n    data.append('file', imageInput.current.files[0]);\r\n    const response: AxiosResponse = await imagesService.uploadImage(data)\r\n    // Error\r\n    if (response.status.toString().startsWith('2')) {\r\n      this.setState({isOpenMsg: true, msg: 'Upload successfully'})\r\n    } else {\r\n      this.setState({isOpenMsg: true, msg: response.data.message})\r\n    }\r\n  }\r\n\r\n  private onCloseMsg = async () => {\r\n    this.setState({isOpenMsg: false})\r\n  }\r\n\r\n  private updateImage = async () => {\r\n    const images: Array<IImage> = await imagesService.getImages()\r\n    this.setState({images})\r\n  }\r\n\r\n  private toggleAnalysisCollapse = async () => {\r\n    await this.setState({isOpenAnalysis: !this.state.isOpenAnalysis})\r\n    if (this.state.isOpenAnalysis) {\r\n      await this.analyze()\r\n      const wrapper = document.querySelector('#app-wrapper')\r\n      wrapper && wrapper.scroll(0, 9999)\r\n    }\r\n  }\r\n\r\n  private favourite = async () => {\r\n    await favouritesService.addFavourite({\r\n      sub_id: this.props.user.subId,\r\n      image_id: this.state.images[0].id\r\n    })\r\n    this.setState({isOpenMsg: true, msg: 'Add to favourite'})\r\n  }\r\n\r\n  private analyze = async () => {\r\n    const {images} = this.state\r\n    if (images.length === 0) {\r\n      return\r\n    }\r\n    const imageAnalysis = await imagesService.analyzeImage(this.state.images[0].id)\r\n    this.setState({imageAnalysis})\r\n  }\r\n\r\n  public render() {\r\n    const {images, imageInput, isOpenMsg, msg, isOpenAnalysis, imageAnalysis} = this.state\r\n    return (\r\n      <Wrapper id=\"home-wrapper\">\r\n        {\r\n          images.length > 0 &&\r\n          <div key={images[0].id}>\r\n              <Header/>\r\n              <ImageWrapper>\r\n                  <Image src={images[0].url} alt=\"Animal Image\"/>\r\n              </ImageWrapper>\r\n              <ActionDiv>\r\n                  <VoteButton color=\"primary\" onClick={this.vote}> <Icon fontSize=\"large\">thumb_up</Icon> </VoteButton>\r\n                  <input onChange={this.onChangeImage} accept=\"image/*\" style={{display: 'none'}} id=\"new-file\"\r\n                         type=\"file\" ref={imageInput}/>\r\n                  <label htmlFor=\"new-file\">\r\n                      <UploadButton component=\"span\"><Icon>cloud_upload</Icon></UploadButton>\r\n                  </label>\r\n                  <FavouriteButton onClick={this.favourite}> <Icon fontSize=\"large\">star</Icon> </FavouriteButton>\r\n                  <AnalyzeButton onClick={this.toggleAnalysisCollapse}><Icon>show_chart</Icon></AnalyzeButton>\r\n                  <NextButton color=\"secondary\" onClick={this.updateImage}> <Icon\r\n                      fontSize=\"large\">arrow_forward_ios</Icon> </NextButton>\r\n              </ActionDiv>\r\n            {\r\n              isOpenAnalysis && images.length > 0 && imageAnalysis.length > 0 &&\r\n              <Analysis imageAnalysis={imageAnalysis[0]}/>\r\n            }\r\n              <Snackbar open={isOpenMsg} TransitionComponent={TransitionUp} onClose={this.onCloseMsg} message={msg}/>\r\n          </div>\r\n        }\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n  axios: state.axios,\r\n  user: state.user\r\n})\r\nconst mapDispatchToProps: IHomeActionProps = {}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n`\r\nexport const TypeSettingSection = styled.section`\r\n padding: 8px 16px;\r\n`\r\n","import * as React from 'react'\r\n// Redux\r\nimport {ISettingActionProps, ISettingProps, ISettingState} from \"./index\"\r\nimport {updateAxios} from \"../../store/axios/actions\"\r\nimport {updateUser} from \"../../store/user/actions\"\r\n// Material UI\r\nimport Radio from \"@material-ui/core/Radio\"\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\n// Custom components\r\nimport Header from '../../components/Header/Header'\r\nimport {IStore} from \"../../store\"\r\nimport {connect} from \"react-redux\"\r\n// Styles\r\nimport {TypeSettingSection, Wrapper} from \"./styles\"\r\n\r\nclass Setting extends React.Component<ISettingProps, ISettingState> {\r\n  constructor(props: ISettingProps) {\r\n    super(props)\r\n  }\r\n\r\n  private onChangeType = (event: React.ChangeEvent<any>) => {\r\n    this.props.updateUser({...this.props.user, type: event.target.value})\r\n    this.props.updateAxios(event.target.value)\r\n  }\r\n\r\n  public render() {\r\n    const {user} = this.props\r\n    return (\r\n      <Wrapper>\r\n        <Header/>\r\n        <TypeSettingSection>\r\n          <h3>Which one would you prefer?</h3>\r\n          <FormControl fullWidth={true}>\r\n            <RadioGroup value={user.type} onChange={this.onChangeType}>\r\n              <FormControlLabel value=\"CAT\" control={<Radio/>} label=\"CAT\"/>\r\n              <FormControlLabel value=\"DOG\" control={<Radio/>} label=\"DOG\"/>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </TypeSettingSection>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n  user: state.user\r\n})\r\n\r\nconst mapDispatchToProps: ISettingActionProps = {\r\n  updateAxios,\r\n  updateUser\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Setting)\r\n","import * as React from 'react'\r\n// Redux\r\nimport {connect} from \"react-redux\"\r\n// Types\r\nimport {IVotesProps, IVotesState} from \"./index\"\r\nimport {IVotesElement} from \"../../env\"\r\n// Material UI\r\nimport GridList from '@material-ui/core/GridList'\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\n// Services\r\nimport votesService from '../../services/votes'\r\nimport imagesService from '../../services/images'\r\n// Custom components\r\nimport Header from '../../components/Header/Header'\r\nimport {IStore} from \"../../store\"\r\n\r\nclass Votes extends React.Component<IVotesProps, IVotesState> {\r\n  constructor(props: IVotesProps) {\r\n    super(props)\r\n    this.state = {\r\n      imagesWithVote: [],\r\n      isOpenDialog: false,\r\n      deletingVoteId: ''\r\n    }\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    const votes: Array<IVotesElement> = await votesService.getVotes({sub_id: this.props.user.subId})\r\n    let imagesWithVote = []\r\n\r\n    for (let i = 0; i < votes.length; i++) {\r\n      const image = await imagesService.getImageById(votes[i].image_id)\r\n      const imageWithVote = {...image, vote: votes[i]}\r\n      imagesWithVote.push(imageWithVote)\r\n    }\r\n    this.setState({imagesWithVote})\r\n  }\r\n\r\n  private formatDate = (dateStr: string): string => {\r\n    const date = new Date(dateStr)\r\n    return `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()-2000}`\r\n  }\r\n\r\n  private deleteVote = async () => {\r\n    const {deletingVoteId} = this.state\r\n    // Remove locally\r\n    const newImagesWithVote = this.state.imagesWithVote.filter(image => image.vote.id !== deletingVoteId)\r\n    this.setState({imagesWithVote: newImagesWithVote})\r\n    this.closeDialog()\r\n    // Send request to remove\r\n    await votesService.deleteVote(deletingVoteId)\r\n  }\r\n\r\n  private closeDialog = () => {\r\n    this.setState({isOpenDialog: false})\r\n  }\r\n  private openDialog = () => {\r\n    this.setState({isOpenDialog: true})\r\n  }\r\n  private deletingVote = (voteId: string) => {\r\n    this.openDialog()\r\n    this.setState({deletingVoteId: voteId})\r\n  }\r\n\r\n  public render() {\r\n    const {imagesWithVote, isOpenDialog} = this.state\r\n    return (\r\n      <div>\r\n        <Header/>\r\n\r\n        <h3 style={{textAlign: 'center', marginBottom: 12}}>Voted Images</h3>\r\n        <GridList cellHeight={180}>\r\n          {\r\n            imagesWithVote.map(image => (\r\n              <GridListTile key={image.id}>\r\n                <img src={image.url} alt={image.id}/>\r\n                <GridListTileBar title=\"\" subtitle={this.formatDate(image.vote.created_at)}\r\n                  actionIcon={\r\n                    <IconButton onClick={() => this.deletingVote(image.vote.id)}>\r\n                      <Icon color=\"secondary\">close</Icon>\r\n                    </IconButton>\r\n                  }/>\r\n              </GridListTile>\r\n            ))\r\n          }\r\n        </GridList>\r\n\r\n        <Dialog open={isOpenDialog} onClose={this.closeDialog}>\r\n          <DialogTitle>Sure to delete it?</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.deleteVote} color=\"primary\">\r\n              Delete\r\n            </Button>\r\n            <Button onClick={this.closeDialog} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n  user: state.user\r\n})\r\nconst mapDispatchToProps = {}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Votes)\r\n","import * as React from 'react'\r\n// Redux\r\nimport {connect} from \"react-redux\"\r\n// Types\r\nimport {IFavouritesProps, IFavouritesState} from \"./index\"\r\nimport {IFavouritesElement} from \"../../env\"\r\n// Material UI\r\nimport GridList from '@material-ui/core/GridList'\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\n// Services\r\nimport favouritesService from '../../services/faviourites'\r\nimport imagesService from '../../services/images'\r\n// Custom components\r\nimport Header from '../../components/Header/Header'\r\nimport {IStore} from \"../../store\"\r\n\r\nclass Favourites extends React.Component<IFavouritesProps, IFavouritesState> {\r\n  constructor(props: IFavouritesProps) {\r\n    super(props)\r\n    this.state = {\r\n      imagesWithFavourite: [],\r\n      isOpenDialog: false,\r\n      deletingFavouriteId: ''\r\n    }\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    const favourites: Array<IFavouritesElement> = await favouritesService.getFavourites({sub_id: this.props.user.subId})\r\n    let imagesWithFavourite = []\r\n\r\n    for (let i = 0; i < favourites.length; i++) {\r\n      const image = await imagesService.getImageById(favourites[i].image_id)\r\n      const imageWithFavourite = {...image, favourite: favourites[i]}\r\n      imagesWithFavourite.push(imageWithFavourite)\r\n    }\r\n    this.setState({imagesWithFavourite})\r\n  }\r\n\r\n  private formatDate = (dateStr: string): string => {\r\n    const date = new Date(dateStr)\r\n    return `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()-2000}`\r\n  }\r\n\r\n  private deleteFavourite = async () => {\r\n    const {deletingFavouriteId} = this.state\r\n    // Remove locally\r\n    const newImagesWithFavourite = this.state.imagesWithFavourite.filter(image => image.favourite.id !== deletingFavouriteId)\r\n    this.setState({imagesWithFavourite: newImagesWithFavourite})\r\n    this.closeDialog()\r\n    // Send request to remove\r\n    await favouritesService.deleteFavourite(deletingFavouriteId)\r\n  }\r\n\r\n  private closeDialog = () => {\r\n    this.setState({isOpenDialog: false})\r\n  }\r\n  private openDialog = () => {\r\n    this.setState({isOpenDialog: true})\r\n  }\r\n  private deletingFavourite = (favouriteId: string) => {\r\n    this.openDialog()\r\n    this.setState({deletingFavouriteId: favouriteId})\r\n  }\r\n\r\n  public render() {\r\n    const {imagesWithFavourite, isOpenDialog} = this.state\r\n    return (\r\n      <div>\r\n        <Header/>\r\n\r\n        <h3 style={{textAlign: 'center', marginBottom: 12}}>Your Favourite Images</h3>\r\n        <GridList cellHeight={180}>\r\n          {\r\n            imagesWithFavourite.map(image => (\r\n              <GridListTile key={image.id}>\r\n                <img src={image.url} alt={image.id}/>\r\n                <GridListTileBar title=\"\" subtitle={this.formatDate(image.favourite.created_at)}\r\n                                 actionIcon={\r\n                                   <IconButton onClick={() => this.deletingFavourite(image.favourite.id)}>\r\n                                     <Icon color=\"secondary\">close</Icon>\r\n                                   </IconButton>\r\n                                 }/>\r\n              </GridListTile>\r\n            ))\r\n          }\r\n        </GridList>\r\n\r\n        <Dialog open={isOpenDialog} onClose={this.closeDialog}>\r\n          <DialogTitle>Sure to delete it?</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.deleteFavourite} color=\"primary\">\r\n              Delete\r\n            </Button>\r\n            <Button onClick={this.closeDialog} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n  user: state.user\r\n})\r\nconst mapDispatchToProps = {}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Favourites)\r\n","import styled from 'styled-components'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  h3 {\r\n    text-align: center;\r\n  }\r\n`\r\nexport const Avatar = styled.img`\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  width: 180px;\r\n`\r\nexport const LoginButton = styled(Button)`\r\n  width: 100%;\r\n`\r\n","import * as React from 'react'\r\n// Router\r\nimport {Link} from \"react-router-dom\"\r\nimport {withRouter} from \"react-router-dom\"\r\n// Redux\r\nimport {connect} from \"react-redux\"\r\nimport {updateUser} from \"../../store/user/actions\"\r\nimport {updateAxios} from \"../../store/axios/actions\"\r\n// Material UI\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\n// Types\r\nimport {IRegisterProps, IRegisterState} from \"./index\"\r\nimport {IStore} from \"../../store\"\r\n// Styles\r\nimport {Avatar, LoginButton, Wrapper} from './styles'\r\n\r\nclass Register extends React.Component<IRegisterProps, IRegisterState> {\r\n  constructor(props: IRegisterProps) {\r\n    super(props)\r\n    this.state = {\r\n      subId: '',\r\n      type: 'CAT',\r\n      isError: false\r\n    }\r\n  }\r\n\r\n  private onChangeSubId = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      subId: event.target.value\r\n    })\r\n  }\r\n\r\n  private onChangeType = (event: any) => {\r\n    this.setState({\r\n      type: event.target.value\r\n    })\r\n  }\r\n\r\n  private register = () => {\r\n    const {subId, type} = this.state\r\n    // Validation\r\n    if (!subId || subId === 'undefined' || subId === 'null') {\r\n      this.setState({ isError: true })\r\n      return\r\n    }\r\n    // Store in localStorage\r\n    const user = { subId, type }\r\n    localStorage.setItem('user', JSON.stringify(user))\r\n    // Update redux\r\n    this.props.updateUser({subId, type})\r\n    this.props.updateAxios(type)\r\n    // Go to home page\r\n    this.props.history.push('/')\r\n  }\r\n\r\n  public render() {\r\n    const {subId, type, isError} = this.state\r\n    return (\r\n      <Wrapper>\r\n        <Avatar src=\"https://i.loli.net/2019/03/30/5c9efda85ee97.jpg\" alt=\"avatar\"/>\r\n        <section>\r\n          <TextField\r\n            error={isError}\r\n            id=\"standard-name\"\r\n            label=\"User Name\"\r\n            value={subId}\r\n            onChange={this.onChangeSubId}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n          />\r\n        </section>\r\n        <section>\r\n          <p>I prefer...</p>\r\n          <FormControl fullWidth={true}>\r\n            <RadioGroup value={type} onChange={this.onChangeType}>\r\n              <FormControlLabel value=\"CAT\" control={<Radio/>} label=\"CAT\"/>\r\n              <FormControlLabel value=\"DOG\" control={<Radio/>} label=\"DOG\"/>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </section>\r\n        <section>\r\n          <LoginButton onClick={this.register} variant=\"contained\" color=\"primary\">\r\n            Get Started\r\n          </LoginButton>\r\n        </section>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => ({ })\r\nconst mapDispatchToProps = {\r\n  updateUser,\r\n  updateAxios\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Register))\r\n","import * as React from 'react'\r\n// Router\r\nimport {Redirect, Route} from \"react-router\"\r\n\r\nconst isLogin = () => {\r\n    const userStr = localStorage.getItem('user')\r\n    // Not exist user info\r\n    if (!userStr) {\r\n        return false\r\n    }\r\n    const user = JSON.parse(userStr)\r\n    return user.subId && user.type\r\n}\r\n\r\nexport default function PrivateRoute(props) {\r\n    const {component: Component, ...restProps} = props\r\n    return (\r\n        <Route {...restProps} render={props => isLogin() ?\r\n                (<Component {...props} />) :\r\n                (<Redirect to={{pathname: \"/register\", state: {from: props.location}}}/>)}/>\r\n    )\r\n}\r\n","import React, {Component} from 'react';\nimport {HashRouter as Router, Route} from \"react-router-dom\"\n// Redux\nimport {IStore} from \"./store\"\nimport {updateAxios} from \"./store/axios/actions\"\nimport {updateUser} from \"./store/user/actions\"\nimport {connect} from \"react-redux\"\n// Material UI\nimport Card from '@material-ui/core/Card'\n// Pages\nimport Home from './pages/Home/Home'\nimport Setting from './pages/Setting/Setting'\nimport Votes from './pages/Votes/Votes'\nimport Favourites from './pages/Favourites/Favourties'\nimport Register from './pages/Register/Register'\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute'\n// App Styles\nimport './App.scss'\n// Types\nimport {IAppActionProps, IAppProps} from \"./env\"\n\nclass App extends Component<IAppProps> {\n  constructor(props: IAppProps) {\n    super(props)\n  }\n\n  public componentDidMount() {\n    const userStr = localStorage.getItem('user')\n    if (!userStr) {\n      return\n    }\n    const user = JSON.parse(userStr)\n    if (!user.subId || !user.type) {\n      return\n    }\n    this.props.updateUser(user)\n    this.props.updateAxios(user.type)\n  }\n\n  public render() {\n    return (\n      <Router>\n        <Card id=\"app-wrapper\" className=\"app-wrapper\">\n          <PrivateRoute path=\"/\" exact={true} component={Home}/>\n          <PrivateRoute path=\"/setting\" component={Setting}/>\n          <PrivateRoute path=\"/votes\" component={Votes}/>\n          <PrivateRoute path=\"/favourites\" component={Favourites}/>\n          <Route path=\"/register\" component={Register}/>\n        </Card>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IStore) => ({})\nconst mapDispatchToProps: IAppActionProps = {\n  updateAxios,\n  updateUser\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// Redux\nimport {Provider} from \"react-redux\"\nimport store from './store/store'\n// utils\nimport * as serviceWorker from './serviceWorker';\n// Root component\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}